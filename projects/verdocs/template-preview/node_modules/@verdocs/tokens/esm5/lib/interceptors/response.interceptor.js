/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { map } from 'rxjs/operators';
import { VerdocsStateService } from '../services/state.service';
var VerdocsResponseInterceptor = /** @class */ (function () {
    function VerdocsResponseInterceptor(injector) {
        this.injector = injector;
    }
    /**
     * @param {?} request
     * @param {?} next
     * @return {?}
     */
    VerdocsResponseInterceptor.prototype.intercept = /**
     * @param {?} request
     * @param {?} next
     * @return {?}
     */
    function (request, next) {
        var _this = this;
        this.stateService = this.injector.get(VerdocsStateService);
        return next.handle(request).pipe(map((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (!!event.headers) {
                /** @type {?} */
                var accessToken = event.headers.get('x-access-token');
                /** @type {?} */
                var idToken = event.headers.get('x-id-token');
                if (accessToken) {
                    _this.stateService.updateCookie('accessToken', accessToken);
                }
                if (idToken) {
                    _this.stateService.updateCookie('idToken', idToken);
                }
            }
            return event;
        })));
    };
    VerdocsResponseInterceptor.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    VerdocsResponseInterceptor.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return VerdocsResponseInterceptor;
}());
export { VerdocsResponseInterceptor };
if (false) {
    /**
     * @type {?}
     * @private
     */
    VerdocsResponseInterceptor.prototype.stateService;
    /**
     * @type {?}
     * @private
     */
    VerdocsResponseInterceptor.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2UuaW50ZXJjZXB0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdmVyZG9jcy90b2tlbnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJjZXB0b3JzL3Jlc3BvbnNlLmludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU9yRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFHaEU7SUFHRSxvQ0FDVSxRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO0lBQ3pCLENBQUM7Ozs7OztJQUNKLDhDQUFTOzs7OztJQUFULFVBQVUsT0FBeUIsRUFBRSxJQUFpQjtRQUF0RCxpQkFpQkM7UUFoQkMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzNELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQzlCLEdBQUc7Ozs7UUFBQyxVQUFDLEtBQXdCO1lBQzNCLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUU7O29CQUNiLFdBQVcsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQzs7b0JBQ2pELE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUM7Z0JBQy9DLElBQUksV0FBVyxFQUFFO29CQUNmLEtBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUMsQ0FBQztpQkFDNUQ7Z0JBQ0QsSUFBSSxPQUFPLEVBQUU7b0JBQ1gsS0FBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO2lCQUNwRDthQUNGO1lBQ0QsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDLEVBQUMsQ0FDSCxDQUFBO0lBQ0gsQ0FBQzs7Z0JBdkJGLFVBQVU7Ozs7Z0JBWlUsUUFBUTs7SUFvQzdCLGlDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0F2QlksMEJBQTBCOzs7Ozs7SUFDckMsa0RBQTBDOzs7OztJQUV4Qyw4Q0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgSHR0cFJlcXVlc3QsXG4gIEh0dHBIYW5kbGVyLFxuICBIdHRwSW50ZXJjZXB0b3IsXG4gIEh0dHBSZXNwb25zZVxufSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IFZlcmRvY3NTdGF0ZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9zdGF0ZS5zZXJ2aWNlJztcblxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVmVyZG9jc1Jlc3BvbnNlSW50ZXJjZXB0b3IgaW1wbGVtZW50cyBIdHRwSW50ZXJjZXB0b3Ige1xuICBwcml2YXRlIHN0YXRlU2VydmljZTogVmVyZG9jc1N0YXRlU2VydmljZTtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3JcbiAgKSB7fVxuICBpbnRlcmNlcHQocmVxdWVzdDogSHR0cFJlcXVlc3Q8YW55PiwgbmV4dDogSHR0cEhhbmRsZXIpIHtcbiAgICB0aGlzLnN0YXRlU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KFZlcmRvY3NTdGF0ZVNlcnZpY2UpO1xuICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXF1ZXN0KS5waXBlKFxuICAgICAgbWFwKChldmVudDogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgICAgaWYgKCEhZXZlbnQuaGVhZGVycykge1xuICAgICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gZXZlbnQuaGVhZGVycy5nZXQoJ3gtYWNjZXNzLXRva2VuJyk7XG4gICAgICAgICAgY29uc3QgaWRUb2tlbiA9IGV2ZW50LmhlYWRlcnMuZ2V0KCd4LWlkLXRva2VuJyk7XG4gICAgICAgICAgaWYgKGFjY2Vzc1Rva2VuKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlU2VydmljZS51cGRhdGVDb29raWUoJ2FjY2Vzc1Rva2VuJywgYWNjZXNzVG9rZW4pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaWRUb2tlbikge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZVNlcnZpY2UudXBkYXRlQ29va2llKCdpZFRva2VuJywgaWRUb2tlbik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBldmVudDtcbiAgICAgIH0pXG4gICAgKVxuICB9XG59XG4iXX0=