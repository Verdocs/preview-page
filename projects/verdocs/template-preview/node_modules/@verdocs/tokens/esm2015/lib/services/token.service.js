/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { VerdocsStateService } from './state.service';
import * as i0 from "@angular/core";
import * as i1 from "./state.service";
export class VerdocsTokenObjectService {
    /**
     * @param {?} stateService
     */
    constructor(stateService) {
        this.stateService = stateService;
    }
    /**
     * @return {?}
     */
    getAccessToken() {
        return this.tokenToObject(this.stateService.getAccessToken());
    }
    /**
     * @return {?}
     */
    getIDToken() {
        return this.tokenToObject(this.stateService.getIDToken());
    }
    /**
     * @return {?}
     */
    getAccountAccessToken() {
        return this.tokenToObject(this.stateService.getAccountAccessToken());
    }
    /**
     * @return {?}
     */
    getVerdocsAccessToken() {
        return this.tokenToObject(this.stateService.getVerdocsAccessToken());
    }
    /**
     * @return {?}
     */
    getProfile() {
        return this.getIDToken() ? this.getIDToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/profile`] : null;
    }
    /**
     * @return {?}
     */
    getPermissions() {
        return this.getAccessToken() ? this.getAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/permissions`] : null;
    }
    /**
     * @return {?}
     */
    getAccountPermissions() {
        return this.getAccountAccessToken() ? this.getAccountAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/permissions`] : null;
    }
    /**
     * @return {?}
     */
    getVerdocsPermissions() {
        return this.getVerdocsAccessToken() ? this.getVerdocsAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/permissions`] : null;
    }
    /**
     * @return {?}
     */
    getPlans() {
        return this.getAccessToken() ? this.getAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/plans`] : this.getAccountPlans() ? this.getAccountPlans() : this.getVerdocsPlans() ? this.getVerdocsPlans() : null;
    }
    /**
     * @return {?}
     */
    getOrganizationID() {
        return this.getAccountAccessToken() ? this.getAccountAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/organization_id`] : null;
    }
    /**
     * @return {?}
     */
    getAccountPlans() {
        return this.getAccountAccessToken() ? this.getAccountAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/plans`] : null;
    }
    /**
     * @return {?}
     */
    getVerdocsPlans() {
        return this.getVerdocsAccessToken() ? this.getVerdocsAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/plans`] : null;
    }
    /**
     * @return {?}
     */
    getRoles() {
        return this.getAccessToken() ? this.getAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/roles`] : this.getAccountRoles() ? this.getAccountRoles() : this.getVerdocsRoles() ? this.getVerdocsRoles() : null;
    }
    /**
     * @return {?}
     */
    getAccountRoles() {
        return this.getAccountAccessToken() ? this.getAccountAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/roles`] : null;
    }
    /**
     * @return {?}
     */
    getVerdocsRoles() {
        return this.getVerdocsAccessToken() ? this.getVerdocsAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/roles`] : null;
    }
    /**
     * @return {?}
     */
    getProfileID() {
        return this.getAccessToken() ? this.getAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/profile_id`] : this.getAccountAccessToken() ? this.getAccountAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/profile_id`] : this.getVerdocsAccessToken() ? this.getVerdocsAccessToken()[`${VerdocsTokenObjectService.TOKEN_NAMESPACE}/profile_id`] : null;
    }
    /**
     * @return {?}
     */
    getUserID() {
        /** @type {?} */
        const sub = this.getAccessToken()['sub'] || this.getAccountAccessToken()['sub'];
        /** @type {?} */
        const idStart = sub.indexOf('|') + 1;
        return this.getAccessToken()['sub'].slice(idStart);
    }
    /**
     * @param {?} token
     * @return {?}
     */
    tokenToObject(token) {
        if (token) {
            /** @type {?} */
            const base64Url = token.split('.')[1];
            /** @type {?} */
            var base64 = base64Url.replace('-', '+').replace('_', '/');
            return JSON.parse(window.atob(base64));
        }
        return null;
    }
}
VerdocsTokenObjectService.TOKEN_NAMESPACE = 'https://verdocs.com';
VerdocsTokenObjectService.decorators = [
    { type: Injectable, args: [{
                providedIn: "root"
            },] }
];
/** @nocollapse */
VerdocsTokenObjectService.ctorParameters = () => [
    { type: VerdocsStateService }
];
/** @nocollapse */ VerdocsTokenObjectService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function VerdocsTokenObjectService_Factory() { return new VerdocsTokenObjectService(i0.ɵɵinject(i1.VerdocsStateService)); }, token: VerdocsTokenObjectService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    VerdocsTokenObjectService.TOKEN_NAMESPACE;
    /**
     * @type {?}
     * @private
     */
    VerdocsTokenObjectService.prototype.stateService;
}
//# sourceMappingURL=data:application/json;base64,