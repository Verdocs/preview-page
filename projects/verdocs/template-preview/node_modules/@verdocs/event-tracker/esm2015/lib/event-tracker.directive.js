/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostListener, Input } from '@angular/core';
export class EventTrackerDirective {
    constructor() { }
    /**
     * @param {?} $event
     * @return {?}
     */
    onClick($event) {
        if (navigator && navigator.userAgent) {
            this.analytics = window['analytics'];
            if (this.event.action) {
                this.analytics.track(this.event.action, {
                    category: this.event.category,
                    label: this.event.label,
                    value: this.event.value
                });
            }
        }
    }
}
EventTrackerDirective.decorators = [
    { type: Directive, args: [{
                selector: '[VerdocsEventTracker]'
            },] }
];
/** @nocollapse */
EventTrackerDirective.ctorParameters = () => [];
EventTrackerDirective.propDecorators = {
    event: [{ type: Input, args: ['VerdocsEventTracker',] }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventTrackerDirective.prototype.analytics;
    /** @type {?} */
    EventTrackerDirective.prototype.event;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQtdHJhY2tlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdmVyZG9jcy9ldmVudC10cmFja2VyLyIsInNvdXJjZXMiOlsibGliL2V2ZW50LXRyYWNrZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPL0QsTUFBTSxPQUFPLHFCQUFxQjtJQWlCaEMsZ0JBQWdCLENBQUM7Ozs7O0lBYmtCLE9BQU8sQ0FBQyxNQUFNO1FBQy9DLElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxTQUFTLEVBQUU7WUFDcEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUE7WUFDcEMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtnQkFDckIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7b0JBQ3RDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVE7b0JBQzdCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7b0JBQ3ZCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7aUJBQ3hCLENBQUMsQ0FBQzthQUNKO1NBQ0Y7SUFDSCxDQUFDOzs7WUFsQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx1QkFBdUI7YUFDbEM7Ozs7O29CQUlFLEtBQUssU0FBQyxxQkFBcUI7c0JBQzNCLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7Ozs7Ozs7SUFIakMsMENBQXVCOztJQUV2QixzQ0FBa0QiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUV2ZW50IH0gZnJvbSAnLi9ldmVudC5tb2RlbCc7XG5cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW1ZlcmRvY3NFdmVudFRyYWNrZXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBFdmVudFRyYWNrZXJEaXJlY3RpdmUge1xuICBwcml2YXRlIGFuYWx5dGljczogYW55O1xuXG4gIEBJbnB1dCgnVmVyZG9jc0V2ZW50VHJhY2tlcicpIGV2ZW50OiBJRXZlbnQgfCBhbnk7XG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSkgb25DbGljaygkZXZlbnQpIHtcbiAgICBpZiAobmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2VyQWdlbnQpIHtcbiAgICAgIHRoaXMuYW5hbHl0aWNzID0gd2luZG93WydhbmFseXRpY3MnXVxuICAgICAgaWYgKHRoaXMuZXZlbnQuYWN0aW9uKSB7XG4gICAgICAgIHRoaXMuYW5hbHl0aWNzLnRyYWNrKHRoaXMuZXZlbnQuYWN0aW9uLCB7XG4gICAgICAgICAgY2F0ZWdvcnk6IHRoaXMuZXZlbnQuY2F0ZWdvcnksXG4gICAgICAgICAgbGFiZWw6IHRoaXMuZXZlbnQubGFiZWwsXG4gICAgICAgICAgdmFsdWU6IHRoaXMuZXZlbnQudmFsdWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxufVxuIl19