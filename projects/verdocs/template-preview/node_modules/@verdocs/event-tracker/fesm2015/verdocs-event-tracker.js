import { Injectable, Directive, Input, HostListener, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class EventTrackerService {
    constructor() { }
    /**
     * @param {?} event
     * @return {?}
     */
    createEvent(event) {
        if (navigator && navigator.userAgent) {
            this.analytics = window['analytics'];
            if (event.action) {
                this.analytics.track(event.action, {
                    category: event.category,
                    label: event.label,
                    value: event.value
                });
            }
        }
    }
}
EventTrackerService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
EventTrackerService.ctorParameters = () => [];
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventTrackerService.prototype.analytics;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class EventTrackerDirective {
    constructor() { }
    /**
     * @param {?} $event
     * @return {?}
     */
    onClick($event) {
        if (navigator && navigator.userAgent) {
            this.analytics = window['analytics'];
            if (this.event.action) {
                this.analytics.track(this.event.action, {
                    category: this.event.category,
                    label: this.event.label,
                    value: this.event.value
                });
            }
        }
    }
}
EventTrackerDirective.decorators = [
    { type: Directive, args: [{
                selector: '[VerdocsEventTracker]'
            },] }
];
/** @nocollapse */
EventTrackerDirective.ctorParameters = () => [];
EventTrackerDirective.propDecorators = {
    event: [{ type: Input, args: ['VerdocsEventTracker',] }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventTrackerDirective.prototype.analytics;
    /** @type {?} */
    EventTrackerDirective.prototype.event;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class EventTrackerModule {
}
EventTrackerModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                declarations: [
                    EventTrackerDirective
                ],
                providers: [
                    EventTrackerService
                ],
                exports: [
                    EventTrackerDirective
                ]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { EventTrackerDirective, EventTrackerModule, EventTrackerService };
//# sourceMappingURL=verdocs-event-tracker.js.map
