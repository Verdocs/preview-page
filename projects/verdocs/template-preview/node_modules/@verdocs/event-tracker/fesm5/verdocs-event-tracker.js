import { Injectable, Directive, Input, HostListener, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var EventTrackerService = /** @class */ (function () {
    function EventTrackerService() {
    }
    /**
     * @param {?} event
     * @return {?}
     */
    EventTrackerService.prototype.createEvent = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (navigator && navigator.userAgent) {
            this.analytics = window['analytics'];
            if (event.action) {
                this.analytics.track(event.action, {
                    category: event.category,
                    label: event.label,
                    value: event.value
                });
            }
        }
    };
    EventTrackerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EventTrackerService.ctorParameters = function () { return []; };
    return EventTrackerService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventTrackerService.prototype.analytics;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var EventTrackerDirective = /** @class */ (function () {
    function EventTrackerDirective() {
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    EventTrackerDirective.prototype.onClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (navigator && navigator.userAgent) {
            this.analytics = window['analytics'];
            if (this.event.action) {
                this.analytics.track(this.event.action, {
                    category: this.event.category,
                    label: this.event.label,
                    value: this.event.value
                });
            }
        }
    };
    EventTrackerDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[VerdocsEventTracker]'
                },] }
    ];
    /** @nocollapse */
    EventTrackerDirective.ctorParameters = function () { return []; };
    EventTrackerDirective.propDecorators = {
        event: [{ type: Input, args: ['VerdocsEventTracker',] }],
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return EventTrackerDirective;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventTrackerDirective.prototype.analytics;
    /** @type {?} */
    EventTrackerDirective.prototype.event;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var EventTrackerModule = /** @class */ (function () {
    function EventTrackerModule() {
    }
    EventTrackerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [],
                    declarations: [
                        EventTrackerDirective
                    ],
                    providers: [
                        EventTrackerService
                    ],
                    exports: [
                        EventTrackerDirective
                    ]
                },] }
    ];
    return EventTrackerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { EventTrackerDirective, EventTrackerModule, EventTrackerService };
//# sourceMappingURL=verdocs-event-tracker.js.map
