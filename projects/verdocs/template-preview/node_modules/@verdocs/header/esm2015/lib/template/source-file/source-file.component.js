/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { VerdocsHeaderService } from '../../services/header.service';
export class TemplateSourceComponent {
    /**
     * @param {?} templatesService
     */
    constructor(templatesService) {
        this.templatesService = templatesService;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes['template']) {
        }
    }
    /**
     * @return {?}
     */
    downloadTemplateDocument() {
        this.templatesService.downloadTemplateDocument(this.template);
    }
}
TemplateSourceComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-template-source',
                template: "<div class=\"template-source__container\" *ngIf=\"template\">\n  <div class=\"template-source__download\" (click)=\"downloadTemplateDocument()\">\n    <mat-icon class=\"template-source__download-icon\">cloud_download</mat-icon>\n    <div class=\"template-source__download-text\">{{template.template_documents[0].name}}</div>\n  </div>\n</div>",
                styles: [".template-source__download{display:flex;align-items:center}.template-source__download:hover{cursor:pointer}.template-source__download-icon{margin-right:4px;color:rgba(0,0,0,.54)}.template-source__download-text{color:rgba(0,0,0,.87)}"]
            }] }
];
/** @nocollapse */
TemplateSourceComponent.ctorParameters = () => [
    { type: VerdocsHeaderService }
];
TemplateSourceComponent.propDecorators = {
    template: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TemplateSourceComponent.prototype.template;
    /**
     * @type {?}
     * @private
     */
    TemplateSourceComponent.prototype.templatesService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLWZpbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHZlcmRvY3MvaGVhZGVyLyIsInNvdXJjZXMiOlsibGliL3RlbXBsYXRlL3NvdXJjZS1maWxlL3NvdXJjZS1maWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBRTNFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBU3JFLE1BQU0sT0FBTyx1QkFBdUI7Ozs7SUFJbEMsWUFDVSxnQkFBc0M7UUFBdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFzQjtJQUM3QyxDQUFDOzs7OztJQUVKLFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsRUFBRTtTQUV4QjtJQUNILENBQUM7Ozs7SUFFRCx3QkFBd0I7UUFDdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRSxDQUFDOzs7WUF0QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLGtXQUEyQzs7YUFFNUM7Ozs7WUFQUSxvQkFBb0I7Ozt1QkFXMUIsS0FBSzs7OztJQUFOLDJDQUE2Qjs7Ozs7SUFHM0IsbURBQThDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFZlcmRvY3NIZWFkZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvaGVhZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgSVRlbXBsYXRlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3ZlcmRvY3MubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtdGVtcGxhdGUtc291cmNlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NvdXJjZS1maWxlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc291cmNlLWZpbGUuY29tcG9uZW50LnNjc3MnXVxufSlcblxuZXhwb3J0IGNsYXNzIFRlbXBsYXRlU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2Vze1xuICBcbiAgQElucHV0KCkgdGVtcGxhdGU6IElUZW1wbGF0ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRlbXBsYXRlc1NlcnZpY2U6IFZlcmRvY3NIZWFkZXJTZXJ2aWNlXG4gICkge31cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXNbJ3RlbXBsYXRlJ10pIHtcblxuICAgIH1cbiAgfVxuXG4gIGRvd25sb2FkVGVtcGxhdGVEb2N1bWVudCgpIHtcbiAgICB0aGlzLnRlbXBsYXRlc1NlcnZpY2UuZG93bmxvYWRUZW1wbGF0ZURvY3VtZW50KHRoaXMudGVtcGxhdGUpO1xuICB9XG5cbn1cbiJdfQ==