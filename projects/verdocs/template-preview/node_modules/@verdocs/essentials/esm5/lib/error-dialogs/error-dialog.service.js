/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { FourOhOneDialog } from '../dialogs/error-dialogs/four-oh-one.dialog';
import { PlansDialog } from '../dialogs/plan-dialogs/plans-dialog.component';
Injectable();
var ErrorDialogService = /** @class */ (function () {
    function ErrorDialogService(dialog) {
        this.dialog = dialog;
    }
    /**
     * @param {?} err
     * @return {?}
     */
    ErrorDialogService.prototype.show401ResponseError = /**
     * @param {?} err
     * @return {?}
     */
    function (err) {
        /** @type {?} */
        var errorDialog = this.dialog.open(FourOhOneDialog, {
            panelClass: 'error_dialog',
            disableClose: true
        });
        errorDialog.componentInstance.error = err;
    };
    /**
     * @param {?} type
     * @param {?} redirect_url
     * @param {?=} dialog_title
     * @param {?=} dialog_message
     * @return {?}
     */
    ErrorDialogService.prototype.showPlansError = /**
     * @param {?} type
     * @param {?} redirect_url
     * @param {?=} dialog_title
     * @param {?=} dialog_message
     * @return {?}
     */
    function (type, redirect_url, dialog_title, dialog_message) {
        /** @type {?} */
        var planErrorDialog = this.dialog.open(PlansDialog, {
            panelClass: 'error_dialog',
            disableClose: true
        });
        if (type) {
            planErrorDialog.componentInstance.type = type;
        }
        if (redirect_url) {
            planErrorDialog.componentInstance.type = redirect_url;
        }
        if (dialog_title) {
            planErrorDialog.componentInstance.dialogTitle = dialog_title;
        }
        if (dialog_message) {
            planErrorDialog.componentInstance.dialogMessage = dialog_message;
        }
    };
    return ErrorDialogService;
}());
export { ErrorDialogService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ErrorDialogService.prototype.dialog;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItZGlhbG9nLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdmVyZG9jcy9lc3NlbnRpYWxzLyIsInNvdXJjZXMiOlsibGliL2Vycm9yLWRpYWxvZ3MvZXJyb3ItZGlhbG9nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUU3RSxVQUFVLEVBQUUsQ0FBQTtBQUNaO0lBQ0UsNEJBQ1UsTUFBaUI7UUFBakIsV0FBTSxHQUFOLE1BQU0sQ0FBVztJQUczQixDQUFDOzs7OztJQUVELGlEQUFvQjs7OztJQUFwQixVQUFxQixHQUFHOztZQUNoQixXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3BELFVBQVUsRUFBRSxjQUFjO1lBQzFCLFlBQVksRUFBRSxJQUFJO1NBQ25CLENBQUM7UUFDRixXQUFXLENBQUMsaUJBQWlCLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztJQUM1QyxDQUFDOzs7Ozs7OztJQUVELDJDQUFjOzs7Ozs7O0lBQWQsVUFBZSxJQUFZLEVBQUUsWUFBb0IsRUFBRSxZQUFxQixFQUFFLGNBQXVCOztZQUN6RixlQUFlLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BELFVBQVUsRUFBRSxjQUFjO1lBQzFCLFlBQVksRUFBRSxJQUFJO1NBQ25CLENBQUM7UUFDRixJQUFJLElBQUksRUFBRTtZQUNSLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQy9DO1FBQ0QsSUFBSSxZQUFZLEVBQUU7WUFDaEIsZUFBZSxDQUFDLGlCQUFpQixDQUFDLElBQUksR0FBRyxZQUFZLENBQUM7U0FDdkQ7UUFDRCxJQUFJLFlBQVksRUFBRTtZQUNoQixlQUFlLENBQUMsaUJBQWlCLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQztTQUM5RDtRQUNELElBQUksY0FBYyxFQUFFO1lBQ2xCLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLEdBQUcsY0FBYyxDQUFDO1NBQ2xFO0lBQ0gsQ0FBQztJQUNILHlCQUFDO0FBQUQsQ0FBQyxBQWpDRCxJQWlDQzs7Ozs7OztJQS9CRyxvQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXREaWFsb2cgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuXG5pbXBvcnQgeyBGb3VyT2hPbmVEaWFsb2cgfSBmcm9tICcuLi9kaWFsb2dzL2Vycm9yLWRpYWxvZ3MvZm91ci1vaC1vbmUuZGlhbG9nJztcbmltcG9ydCB7IFBsYW5zRGlhbG9nIH0gZnJvbSAnLi4vZGlhbG9ncy9wbGFuLWRpYWxvZ3MvcGxhbnMtZGlhbG9nLmNvbXBvbmVudCc7XG5cbkluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEVycm9yRGlhbG9nU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZGlhbG9nOiBNYXREaWFsb2dcbiAgKSB7XG4gICAgICAgIFxuICB9XG5cbiAgc2hvdzQwMVJlc3BvbnNlRXJyb3IoZXJyKSB7XG4gICAgY29uc3QgZXJyb3JEaWFsb2cgPSB0aGlzLmRpYWxvZy5vcGVuKEZvdXJPaE9uZURpYWxvZywge1xuICAgICAgcGFuZWxDbGFzczogJ2Vycm9yX2RpYWxvZycsXG4gICAgICBkaXNhYmxlQ2xvc2U6IHRydWVcbiAgICB9KTtcbiAgICBlcnJvckRpYWxvZy5jb21wb25lbnRJbnN0YW5jZS5lcnJvciA9IGVycjtcbiAgfVxuXG4gIHNob3dQbGFuc0Vycm9yKHR5cGU6IHN0cmluZywgcmVkaXJlY3RfdXJsOiBzdHJpbmcsIGRpYWxvZ190aXRsZT86IHN0cmluZywgZGlhbG9nX21lc3NhZ2U/OiBzdHJpbmcpIHtcbiAgICBjb25zdCBwbGFuRXJyb3JEaWFsb2cgPSB0aGlzLmRpYWxvZy5vcGVuKFBsYW5zRGlhbG9nLCB7XG4gICAgICBwYW5lbENsYXNzOiAnZXJyb3JfZGlhbG9nJyxcbiAgICAgIGRpc2FibGVDbG9zZTogdHJ1ZVxuICAgIH0pO1xuICAgIGlmICh0eXBlKSB7XG4gICAgICBwbGFuRXJyb3JEaWFsb2cuY29tcG9uZW50SW5zdGFuY2UudHlwZSA9IHR5cGU7XG4gICAgfVxuICAgIGlmIChyZWRpcmVjdF91cmwpIHtcbiAgICAgIHBsYW5FcnJvckRpYWxvZy5jb21wb25lbnRJbnN0YW5jZS50eXBlID0gcmVkaXJlY3RfdXJsO1xuICAgIH1cbiAgICBpZiAoZGlhbG9nX3RpdGxlKSB7XG4gICAgICBwbGFuRXJyb3JEaWFsb2cuY29tcG9uZW50SW5zdGFuY2UuZGlhbG9nVGl0bGUgPSBkaWFsb2dfdGl0bGU7XG4gICAgfVxuICAgIGlmIChkaWFsb2dfbWVzc2FnZSkge1xuICAgICAgcGxhbkVycm9yRGlhbG9nLmNvbXBvbmVudEluc3RhbmNlLmRpYWxvZ01lc3NhZ2UgPSBkaWFsb2dfbWVzc2FnZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==