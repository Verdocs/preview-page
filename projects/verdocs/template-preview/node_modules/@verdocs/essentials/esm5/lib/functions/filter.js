/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} type
 * @return {?}
 */
export function timePeriod(type) {
    /** @type {?} */
    var endDate = new Date().getTime();
    /** @type {?} */
    var today = new Date();
    /** @type {?} */
    var month = today.getMonth();
    /** @type {?} */
    var year = today.getFullYear();
    /** @type {?} */
    var startDate = null;
    switch (type) {
        case '30d':
            startDate = endDate - (60 * 60 * 24 * 30 * 1000);
            break;
        case '60d':
            startDate = endDate - (60 * 60 * 24 * 60 * 1000);
            break;
        case '6m':
            startDate = endDate - (60 * 60 * 24 * 30 * 6 * 1000);
            break;
        case 'this_month':
            startDate = new Date(year, month, 1).getTime();
            break;
        case 'last_month':
            startDate = new Date(year, month - 1, 1).getTime();
            endDate = new Date(year, month, 0).getTime();
            break;
        case 'this_year':
            startDate = new Date(year, 0, 1);
            break;
        case 'all_time':
            startDate = null;
            endDate = null;
            break;
        default:
            startDate = null;
            endDate = null;
            break;
    }
    if (startDate == null && endDate == null) {
        return null;
    }
    return (/** @type {?} */ ({
        start_time: new Date(startDate).toISOString(),
        end_time: new Date(endDate).toISOString()
    }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHZlcmRvY3MvZXNzZW50aWFscy8iLCJzb3VyY2VzIjpbImxpYi9mdW5jdGlvbnMvZmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRUEsTUFBTSxVQUFVLFVBQVUsQ0FBQyxJQUFJOztRQUN6QixPQUFPLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUU7O1FBQzFCLEtBQUssR0FBRyxJQUFJLElBQUksRUFBRTs7UUFDbEIsS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUU7O1FBQ3hCLElBQUksR0FBRyxLQUFLLENBQUMsV0FBVyxFQUFFOztRQUM1QixTQUFTLEdBQUcsSUFBSTtJQUNwQixRQUFRLElBQUksRUFBRTtRQUNaLEtBQUssS0FBSztZQUNSLFNBQVMsR0FBRyxPQUFPLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7WUFDakQsTUFBTTtRQUNSLEtBQUssS0FBSztZQUNSLFNBQVMsR0FBRyxPQUFPLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7WUFDakQsTUFBTTtRQUNSLEtBQUssSUFBSTtZQUNQLFNBQVMsR0FBRyxPQUFPLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1lBQ3JELE1BQU07UUFDUixLQUFLLFlBQVk7WUFDZixTQUFTLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUMvQyxNQUFNO1FBQ1IsS0FBSyxZQUFZO1lBQ2YsU0FBUyxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ25ELE9BQU8sR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQzdDLE1BQU07UUFDUixLQUFLLFdBQVc7WUFDZCxTQUFTLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNqQyxNQUFNO1FBQ1IsS0FBSyxVQUFVO1lBQ2IsU0FBUyxHQUFHLElBQUksQ0FBQztZQUNqQixPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ2YsTUFBTTtRQUNSO1lBQ0UsU0FBUyxHQUFHLElBQUksQ0FBQztZQUNqQixPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ2YsTUFBTTtLQUNUO0lBRUQsSUFBSSxTQUFTLElBQUksSUFBSSxJQUFJLE9BQU8sSUFBSSxJQUFJLEVBQUU7UUFDeEMsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUNELE9BQU8sbUJBQUE7UUFDTCxVQUFVLEVBQUUsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsV0FBVyxFQUFFO1FBQzdDLFFBQVEsRUFBRSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUU7S0FDMUMsRUFBZSxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJVGltZVBlcmlvZCB9IGZyb20gJ0B2ZXJkb2NzL3Nkayc7XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lUGVyaW9kKHR5cGUpOiBJVGltZVBlcmlvZCB7XG4gIGxldCBlbmREYXRlID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IG1vbnRoID0gdG9kYXkuZ2V0TW9udGgoKTtcbiAgICBjb25zdCB5ZWFyID0gdG9kYXkuZ2V0RnVsbFllYXIoKTtcbiAgICBsZXQgc3RhcnREYXRlID0gbnVsbDtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJzMwZCc6XG4gICAgICAgIHN0YXJ0RGF0ZSA9IGVuZERhdGUgLSAoNjAgKiA2MCAqIDI0ICogMzAgKiAxMDAwKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICc2MGQnOlxuICAgICAgICBzdGFydERhdGUgPSBlbmREYXRlIC0gKDYwICogNjAgKiAyNCAqIDYwICogMTAwMCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnNm0nOlxuICAgICAgICBzdGFydERhdGUgPSBlbmREYXRlIC0gKDYwICogNjAgKiAyNCAqIDMwICogNiAqIDEwMDApO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RoaXNfbW9udGgnOlxuICAgICAgICBzdGFydERhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMSkuZ2V0VGltZSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2xhc3RfbW9udGgnOlxuICAgICAgICBzdGFydERhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCAtIDEsIDEpLmdldFRpbWUoKTtcbiAgICAgICAgZW5kRGF0ZSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCAwKS5nZXRUaW1lKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndGhpc195ZWFyJzpcbiAgICAgICAgc3RhcnREYXRlID0gbmV3IERhdGUoeWVhciwgMCwgMSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYWxsX3RpbWUnOlxuICAgICAgICBzdGFydERhdGUgPSBudWxsO1xuICAgICAgICBlbmREYXRlID0gbnVsbDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdGFydERhdGUgPSBudWxsO1xuICAgICAgICBlbmREYXRlID0gbnVsbDtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKHN0YXJ0RGF0ZSA9PSBudWxsICYmIGVuZERhdGUgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICBzdGFydF90aW1lOiBuZXcgRGF0ZShzdGFydERhdGUpLnRvSVNPU3RyaW5nKCksXG4gICAgICBlbmRfdGltZTogbmV3IERhdGUoZW5kRGF0ZSkudG9JU09TdHJpbmcoKVxuICAgIH0gYXMgSVRpbWVQZXJpb2Q7XG59Il19