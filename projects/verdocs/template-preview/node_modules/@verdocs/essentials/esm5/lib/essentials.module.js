/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, InjectionToken } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatDialogModule } from '@angular/material/dialog';
import { AngularApiModule } from '@verdocs/sdk';
import { SnackbarService } from './snackbar/snackbar.service';
import { AccountService } from './account/account.service';
import { BrowserToiTextService } from './builder/browser-to-iText.service';
import { BuilderDataService } from './builder/builder-data.service';
import { BuilderService } from './builder/builder-settings.service';
import { ConversionService } from './fields/conversion.service';
import { SignatureService } from './fields/envelope-signature.service';
import { EnvelopeViewService } from './fields/envelope-view.service';
import { PageService } from './fields/page.service';
import { ModalService } from './modal/modal.service';
import { ErrorDialogService } from './error-dialogs/error-dialog.service';
import { GuardService } from './guards/guard.service';
import { FourOhOneDialog } from './dialogs/error-dialogs/four-oh-one.dialog';
import { PlansDialog } from './dialogs/plan-dialogs/plans-dialog.component';
/**
 * @record
 */
export function EssentialsConfig() { }
if (false) {
    /** @type {?} */
    EssentialsConfig.prototype.production;
    /** @type {?} */
    EssentialsConfig.prototype.domain;
    /** @type {?} */
    EssentialsConfig.prototype.rForm_backend_url;
    /** @type {?} */
    EssentialsConfig.prototype.rForm_frontend_url;
    /** @type {?} */
    EssentialsConfig.prototype.rSecure_frontend_url;
    /** @type {?} */
    EssentialsConfig.prototype.rSecure_backend_url;
    /** @type {?} */
    EssentialsConfig.prototype.rAccount_frontend_url;
    /** @type {?} */
    EssentialsConfig.prototype.rAccount_backend_url;
    /** @type {?} */
    EssentialsConfig.prototype.rNotification_backend_url;
    /** @type {?} */
    EssentialsConfig.prototype.rForm_cookie_name;
    /** @type {?} */
    EssentialsConfig.prototype.loginURL;
    /** @type {?} */
    EssentialsConfig.prototype.origin;
    /** @type {?} */
    EssentialsConfig.prototype.plans;
}
/** @type {?} */
export var EssentialsConfigToken = new InjectionToken('EssentialsConfig');
var EssentialsModule = /** @class */ (function () {
    function EssentialsModule() {
    }
    /**
     * @param {?} config
     * @return {?}
     */
    EssentialsModule.initializeEssentials = /**
     * @param {?} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: EssentialsModule,
            import: [
                CommonModule,
                AngularApiModule.initSDK({
                    production: config.production,
                    domain: config.domain,
                    origin: config.origin,
                    loginURL: config.loginURL,
                    rForm_backend_url: config.rForm_backend_url,
                    rForm_frontend_url: config.rForm_frontend_url,
                    rSecure_backend_url: config.rSecure_backend_url,
                    rSecure_frontend_url: config.rSecure_frontend_url,
                    rAccount_backend_url: config.rAccount_backend_url,
                    rAccount_frontend_url: config.rAccount_frontend_url,
                    rNotification_backend_url: config.rNotification_backend_url,
                    plans: config.plans
                }),
                MatDialogModule
            ],
            providers: [
                {
                    provide: EssentialsConfigToken,
                    useValue: config
                },
                SnackbarService,
                AccountService,
                BrowserToiTextService,
                BuilderDataService,
                BuilderService,
                ConversionService,
                SignatureService,
                EnvelopeViewService,
                PageService,
                ModalService,
                ErrorDialogService,
                GuardService
            ],
            declarations: [
                FourOhOneDialog,
                PlansDialog
            ],
            EntryComponents: [
                FourOhOneDialog,
                PlansDialog
            ],
            exports: [
                FourOhOneDialog,
                PlansDialog
            ]
        };
    };
    EssentialsModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    providers: [],
                    declarations: [
                        FourOhOneDialog,
                        PlansDialog
                    ]
                },] }
    ];
    return EssentialsModule;
}());
export { EssentialsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNzZW50aWFscy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdmVyZG9jcy9lc3NlbnRpYWxzLyIsInNvdXJjZXMiOlsibGliL2Vzc2VudGlhbHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUVoRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDN0UsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLCtDQUErQyxDQUFDOzs7O0FBRTVFLHNDQWtCQzs7O0lBakJDLHNDQUFvQjs7SUFDcEIsa0NBQWU7O0lBQ2YsNkNBQTBCOztJQUMxQiw4Q0FBMkI7O0lBQzNCLGdEQUE2Qjs7SUFDN0IsK0NBQTRCOztJQUM1QixpREFBOEI7O0lBQzlCLGdEQUE2Qjs7SUFDN0IscURBQWtDOztJQUNsQyw2Q0FBMEI7O0lBQzFCLG9DQUFpQjs7SUFDakIsa0NBQTZCOztJQUM3QixpQ0FJQzs7O0FBR0gsTUFBTSxLQUFPLHFCQUFxQixHQUFHLElBQUksY0FBYyxDQUFtQixrQkFBa0IsQ0FBQztBQUU3RjtJQUFBO0lBbUVBLENBQUM7Ozs7O0lBdERRLHFDQUFvQjs7OztJQUEzQixVQUE0QixNQUF3QjtRQUVsRCxPQUFPO1lBQ0wsUUFBUSxFQUFFLGdCQUFnQjtZQUMxQixNQUFNLEVBQUU7Z0JBQ04sWUFBWTtnQkFDWixnQkFBZ0IsQ0FBQyxPQUFPLENBQUM7b0JBQ3ZCLFVBQVUsRUFBRSxNQUFNLENBQUMsVUFBVTtvQkFDN0IsTUFBTSxFQUFFLE1BQU0sQ0FBQyxNQUFNO29CQUNyQixNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU07b0JBQ3JCLFFBQVEsRUFBRSxNQUFNLENBQUMsUUFBUTtvQkFDekIsaUJBQWlCLEVBQUUsTUFBTSxDQUFDLGlCQUFpQjtvQkFDM0Msa0JBQWtCLEVBQUUsTUFBTSxDQUFDLGtCQUFrQjtvQkFDN0MsbUJBQW1CLEVBQUUsTUFBTSxDQUFDLG1CQUFtQjtvQkFDL0Msb0JBQW9CLEVBQUUsTUFBTSxDQUFDLG9CQUFvQjtvQkFDakQsb0JBQW9CLEVBQUUsTUFBTSxDQUFDLG9CQUFvQjtvQkFDakQscUJBQXFCLEVBQUUsTUFBTSxDQUFDLHFCQUFxQjtvQkFDbkQseUJBQXlCLEVBQUUsTUFBTSxDQUFDLHlCQUF5QjtvQkFDM0QsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO2lCQUN0QixDQUFDO2dCQUNGLGVBQWU7YUFDaEI7WUFDQyxTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLHFCQUFxQjtvQkFDOUIsUUFBUSxFQUFFLE1BQU07aUJBQ2pCO2dCQUNELGVBQWU7Z0JBQ2YsY0FBYztnQkFDZCxxQkFBcUI7Z0JBQ3JCLGtCQUFrQjtnQkFDbEIsY0FBYztnQkFDZCxpQkFBaUI7Z0JBQ2pCLGdCQUFnQjtnQkFDaEIsbUJBQW1CO2dCQUNuQixXQUFXO2dCQUNYLFlBQVk7Z0JBQ1osa0JBQWtCO2dCQUNsQixZQUFZO2FBQ2I7WUFDRCxZQUFZLEVBQUU7Z0JBQ1osZUFBZTtnQkFDZixXQUFXO2FBQ1o7WUFDRCxlQUFlLEVBQUU7Z0JBQ2YsZUFBZTtnQkFDZixXQUFXO2FBQ1o7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsZUFBZTtnQkFDZixXQUFXO2FBQ1o7U0FDRixDQUFBO0lBQ0gsQ0FBQzs7Z0JBbEVGLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxTQUFTLEVBQUUsRUFBRTtvQkFDYixZQUFZLEVBQUU7d0JBQ1osZUFBZTt3QkFDZixXQUFXO3FCQUNaO2lCQUNGOztJQTBERCx1QkFBQztDQUFBLEFBbkVELElBbUVDO1NBeERZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE1hdERpYWxvZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZydcbmltcG9ydCB7IEFuZ3VsYXJBcGlNb2R1bGUgfSBmcm9tICdAdmVyZG9jcy9zZGsnO1xuXG5pbXBvcnQgeyBTbmFja2JhclNlcnZpY2UgfSBmcm9tICcuL3NuYWNrYmFyL3NuYWNrYmFyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQWNjb3VudFNlcnZpY2UgfSBmcm9tICcuL2FjY291bnQvYWNjb3VudC5zZXJ2aWNlJztcbmltcG9ydCB7IEJyb3dzZXJUb2lUZXh0U2VydmljZSB9IGZyb20gJy4vYnVpbGRlci9icm93c2VyLXRvLWlUZXh0LnNlcnZpY2UnO1xuaW1wb3J0IHsgQnVpbGRlckRhdGFTZXJ2aWNlIH0gZnJvbSAnLi9idWlsZGVyL2J1aWxkZXItZGF0YS5zZXJ2aWNlJztcbmltcG9ydCB7IEJ1aWxkZXJTZXJ2aWNlIH0gZnJvbSAnLi9idWlsZGVyL2J1aWxkZXItc2V0dGluZ3Muc2VydmljZSc7XG5pbXBvcnQgeyBDb252ZXJzaW9uU2VydmljZSB9IGZyb20gJy4vZmllbGRzL2NvbnZlcnNpb24uc2VydmljZSc7XG5pbXBvcnQgeyBTaWduYXR1cmVTZXJ2aWNlIH0gZnJvbSAnLi9maWVsZHMvZW52ZWxvcGUtc2lnbmF0dXJlLnNlcnZpY2UnO1xuaW1wb3J0IHsgRW52ZWxvcGVWaWV3U2VydmljZSB9IGZyb20gJy4vZmllbGRzL2VudmVsb3BlLXZpZXcuc2VydmljZSc7XG5pbXBvcnQgeyBQYWdlU2VydmljZSB9IGZyb20gJy4vZmllbGRzL3BhZ2Uuc2VydmljZSc7XG5pbXBvcnQgeyBNb2RhbFNlcnZpY2UgfSBmcm9tICcuL21vZGFsL21vZGFsLnNlcnZpY2UnO1xuaW1wb3J0IHsgRXJyb3JEaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi9lcnJvci1kaWFsb2dzL2Vycm9yLWRpYWxvZy5zZXJ2aWNlJztcbmltcG9ydCB7IEd1YXJkU2VydmljZSB9IGZyb20gJy4vZ3VhcmRzL2d1YXJkLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBGb3VyT2hPbmVEaWFsb2cgfSBmcm9tICcuL2RpYWxvZ3MvZXJyb3ItZGlhbG9ncy9mb3VyLW9oLW9uZS5kaWFsb2cnO1xuaW1wb3J0IHsgUGxhbnNEaWFsb2cgfSBmcm9tICcuL2RpYWxvZ3MvcGxhbi1kaWFsb2dzL3BsYW5zLWRpYWxvZy5jb21wb25lbnQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVzc2VudGlhbHNDb25maWcge1xuICBwcm9kdWN0aW9uOiBib29sZWFuO1xuICBkb21haW46IHN0cmluZztcbiAgckZvcm1fYmFja2VuZF91cmw6IHN0cmluZztcbiAgckZvcm1fZnJvbnRlbmRfdXJsOiBzdHJpbmc7XG4gIHJTZWN1cmVfZnJvbnRlbmRfdXJsOiBzdHJpbmc7XG4gIHJTZWN1cmVfYmFja2VuZF91cmw6IHN0cmluZztcbiAgckFjY291bnRfZnJvbnRlbmRfdXJsOiBzdHJpbmc7XG4gIHJBY2NvdW50X2JhY2tlbmRfdXJsOiBzdHJpbmc7XG4gIHJOb3RpZmljYXRpb25fYmFja2VuZF91cmw6IHN0cmluZztcbiAgckZvcm1fY29va2llX25hbWU6IHN0cmluZztcbiAgbG9naW5VUkw6IHN0cmluZztcbiAgb3JpZ2luOiAnckFjY291bnQnIHwgJ3JGb3JtJztcbiAgcGxhbnM6IHtcbiAgICAnbGV2ZWwtMSc6IHN0cmluZztcbiAgICAnbGV2ZWwtMic6IHN0cmluZztcbiAgICAnbGV2ZWwtMyc6IHN0cmluZztcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgRXNzZW50aWFsc0NvbmZpZ1Rva2VuID0gbmV3IEluamVjdGlvblRva2VuPEVzc2VudGlhbHNDb25maWc+KCdFc3NlbnRpYWxzQ29uZmlnJyk7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRm91ck9oT25lRGlhbG9nLFxuICAgIFBsYW5zRGlhbG9nXG4gIF1cbn0pXG4vLyBAZHluYW1pY1xuZXhwb3J0IGNsYXNzIEVzc2VudGlhbHNNb2R1bGUge1xuXG4gIHN0YXRpYyBpbml0aWFsaXplRXNzZW50aWFscyhjb25maWc6IEVzc2VudGlhbHNDb25maWcpIHtcblxuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogRXNzZW50aWFsc01vZHVsZSxcbiAgICAgIGltcG9ydDogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIEFuZ3VsYXJBcGlNb2R1bGUuaW5pdFNESyh7XG4gICAgICAgICAgcHJvZHVjdGlvbjogY29uZmlnLnByb2R1Y3Rpb24sXG4gICAgICAgICAgZG9tYWluOiBjb25maWcuZG9tYWluLFxuICAgICAgICAgIG9yaWdpbjogY29uZmlnLm9yaWdpbixcbiAgICAgICAgICBsb2dpblVSTDogY29uZmlnLmxvZ2luVVJMLFxuICAgICAgICAgIHJGb3JtX2JhY2tlbmRfdXJsOiBjb25maWcuckZvcm1fYmFja2VuZF91cmwsXG4gICAgICAgICAgckZvcm1fZnJvbnRlbmRfdXJsOiBjb25maWcuckZvcm1fZnJvbnRlbmRfdXJsLFxuICAgICAgICAgIHJTZWN1cmVfYmFja2VuZF91cmw6IGNvbmZpZy5yU2VjdXJlX2JhY2tlbmRfdXJsLFxuICAgICAgICAgIHJTZWN1cmVfZnJvbnRlbmRfdXJsOiBjb25maWcuclNlY3VyZV9mcm9udGVuZF91cmwsXG4gICAgICAgICAgckFjY291bnRfYmFja2VuZF91cmw6IGNvbmZpZy5yQWNjb3VudF9iYWNrZW5kX3VybCxcbiAgICAgICAgICByQWNjb3VudF9mcm9udGVuZF91cmw6IGNvbmZpZy5yQWNjb3VudF9mcm9udGVuZF91cmwsXG4gICAgICAgICAgck5vdGlmaWNhdGlvbl9iYWNrZW5kX3VybDogY29uZmlnLnJOb3RpZmljYXRpb25fYmFja2VuZF91cmwsXG4gICAgICAgICAgcGxhbnM6IGNvbmZpZy5wbGFuc1xuICAgICAgfSksXG4gICAgICBNYXREaWFsb2dNb2R1bGVcbiAgICBdLCBcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogRXNzZW50aWFsc0NvbmZpZ1Rva2VuLFxuICAgICAgICAgIHVzZVZhbHVlOiBjb25maWdcbiAgICAgICAgfSxcbiAgICAgICAgU25hY2tiYXJTZXJ2aWNlLFxuICAgICAgICBBY2NvdW50U2VydmljZSxcbiAgICAgICAgQnJvd3NlclRvaVRleHRTZXJ2aWNlLFxuICAgICAgICBCdWlsZGVyRGF0YVNlcnZpY2UsXG4gICAgICAgIEJ1aWxkZXJTZXJ2aWNlLFxuICAgICAgICBDb252ZXJzaW9uU2VydmljZSxcbiAgICAgICAgU2lnbmF0dXJlU2VydmljZSxcbiAgICAgICAgRW52ZWxvcGVWaWV3U2VydmljZSxcbiAgICAgICAgUGFnZVNlcnZpY2UsXG4gICAgICAgIE1vZGFsU2VydmljZSxcbiAgICAgICAgRXJyb3JEaWFsb2dTZXJ2aWNlLFxuICAgICAgICBHdWFyZFNlcnZpY2VcbiAgICAgIF0sXG4gICAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgRm91ck9oT25lRGlhbG9nLFxuICAgICAgICBQbGFuc0RpYWxvZ1xuICAgICAgXSxcbiAgICAgIEVudHJ5Q29tcG9uZW50czogW1xuICAgICAgICBGb3VyT2hPbmVEaWFsb2csXG4gICAgICAgIFBsYW5zRGlhbG9nXG4gICAgICBdLFxuICAgICAgZXhwb3J0czogW1xuICAgICAgICBGb3VyT2hPbmVEaWFsb2csXG4gICAgICAgIFBsYW5zRGlhbG9nXG4gICAgICBdXG4gICAgfVxuICB9XG59XG4iXX0=