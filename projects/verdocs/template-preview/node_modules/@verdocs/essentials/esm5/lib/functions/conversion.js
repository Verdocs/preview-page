/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} field
 * @return {?}
 */
export function getDefaultHeight(field) {
    /** @type {?} */
    var height = 0;
    switch (field.type) {
        case 'signature':
        case 'initial':
            height = 36;
            break;
        case 'checkbox':
        case 'checkbox_group':
        case 'radio_button_group':
            height = 13.5;
            break;
        case 'attachment':
        case 'payment':
            height = 24;
            break;
        default:
            height = field.setting['height'] || 0;
            break;
    }
    return height;
}
/**
 * @param {?} field
 * @return {?}
 */
export function getDefaultWidth(field) {
    /** @type {?} */
    var width = 0;
    switch (field.type) {
        case 'signature':
        case 'initial':
            width = 82.63636363636;
            break;
        case 'checkbox':
        case 'checkbox_group':
        case 'radio_button_group':
            width = 13.5;
            break;
        case 'attachment':
        case 'payment':
            width = 24;
            break;
        case 'date':
            width = 64;
            break;
        case 'dropdown':
            width = field.setting['width'] || 64;
            break;
        default:
            width = field.setting['width'] || 0;
            break;
    }
    return width;
}
/**
 * @param {?} y
 * @param {?} fieldHeight
 * @param {?} iTextHeight
 * @param {?} yRatio
 * @return {?}
 */
export function getRTop(y, fieldHeight, iTextHeight, yRatio) {
    return iTextHeight - ((y + fieldHeight) * yRatio);
}
/**
 * @param {?} x
 * @param {?} ratio
 * @return {?}
 */
export function getRLeft(x, ratio) {
    return x * ratio;
}
/**
 * @param {?} y
 * @param {?} ratio
 * @return {?}
 */
export function getRValue(y, ratio) {
    return y * ratio;
}
/**
 * @param {?} field
 * @return {?}
 */
export function getUIFieldStyling(field) {
    /** @type {?} */
    var height = getDefaultHeight(field);
    /** @type {?} */
    var style = {
        left: field.setting.x + 'px',
        bottom: field.setting.y + 'px',
        height: '100%',
        width: '100%'
    };
    switch (field.type) {
        case 'textbox':
        case 'date':
        case 'timestamp':
        case 'placeholder':
        case 'dropdown':
            style['maxHeight'] = height + 'px';
            style['maxWidth'] = field.setting.width + 'px';
            break;
        case 'checkbox':
        case 'checkbox_group':
        case 'radio_button_group':
            style['maxHeight'] = 13.5 + 'px';
            style['maxWidth'] = 13.5 + 'px';
            break;
        case 'attachment':
        case 'payment':
            style['maxHeight'] = 24 + 'px';
            style['maxWidth'] = 24 + 'px';
            break;
        case 'signature':
        case 'initial':
            style['maxHeight'] = 36 + 'px';
            style['maxWidth'] = 82.63636363636 + 'px';
            style['line-height'] = 36 + 'px';
            break;
        default:
            break;
    }
    return style;
}
/**
 * @param {?} image
 * @return {?}
 */
export function blobToBase64(image) {
    /** @type {?} */
    var fileReader = new FileReader();
    return new Promise((/**
     * @param {?} resolve
     * @param {?} reject
     * @return {?}
     */
    function (resolve, reject) {
        fileReader.onerror = (/**
         * @return {?}
         */
        function () {
            reject(new DOMException("Problem reading blob."));
        });
        fileReader.onload = (/**
         * @return {?}
         */
        function () {
            resolve(fileReader.result);
        });
        fileReader.readAsDataURL(image);
    }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B2ZXJkb2NzL2Vzc2VudGlhbHMvIiwic291cmNlcyI6WyJsaWIvZnVuY3Rpb25zL2NvbnZlcnNpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsS0FBSzs7UUFDaEMsTUFBTSxHQUFHLENBQUM7SUFDZCxRQUFRLEtBQUssQ0FBQyxJQUFJLEVBQUU7UUFDbEIsS0FBSyxXQUFXLENBQUM7UUFDakIsS0FBSyxTQUFTO1lBQ1osTUFBTSxHQUFHLEVBQUUsQ0FBQztZQUNaLE1BQU07UUFDUixLQUFLLFVBQVUsQ0FBQztRQUNoQixLQUFLLGdCQUFnQixDQUFDO1FBQ3RCLEtBQUssb0JBQW9CO1lBQ3ZCLE1BQU0sR0FBRyxJQUFJLENBQUM7WUFDZCxNQUFNO1FBQ1IsS0FBSyxZQUFZLENBQUM7UUFDbEIsS0FBSyxTQUFTO1lBQ1osTUFBTSxHQUFHLEVBQUUsQ0FBQztZQUNaLE1BQU07UUFDUjtZQUNFLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN0QyxNQUFNO0tBQ1Q7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDOzs7OztBQUVELE1BQU0sVUFBVSxlQUFlLENBQUMsS0FBSzs7UUFDL0IsS0FBSyxHQUFHLENBQUM7SUFDYixRQUFRLEtBQUssQ0FBQyxJQUFJLEVBQUU7UUFDbEIsS0FBSyxXQUFXLENBQUM7UUFDakIsS0FBSyxTQUFTO1lBQ1osS0FBSyxHQUFHLGNBQWMsQ0FBQztZQUN2QixNQUFNO1FBQ1IsS0FBSyxVQUFVLENBQUM7UUFDaEIsS0FBSyxnQkFBZ0IsQ0FBQztRQUN0QixLQUFLLG9CQUFvQjtZQUN2QixLQUFLLEdBQUcsSUFBSSxDQUFDO1lBQ2IsTUFBTTtRQUNSLEtBQUssWUFBWSxDQUFDO1FBQ2xCLEtBQUssU0FBUztZQUNaLEtBQUssR0FBRyxFQUFFLENB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bkIsTUFBTSxDQUFDLElBQUksWUFBWSxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUEsQ0FBQTtRQUVELFVBQVUsQ0FBQyxNQUFNOzs7UUFBRztZQUNsQixPQUFPLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQSxDQUFBO1FBRUQsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxDQUFDLEVBQUMsQ0FBQTtBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdEhlaWdodChmaWVsZCkge1xuICBsZXQgaGVpZ2h0ID0gMDtcbiAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgY2FzZSAnc2lnbmF0dXJlJzpcbiAgICBjYXNlICdpbml0aWFsJzpcbiAgICAgIGhlaWdodCA9IDM2O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnY2hlY2tib3gnOlxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgaGVpZ2h0ID0gMTMuNTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2F0dGFjaG1lbnQnOlxuICAgIGNhc2UgJ3BheW1lbnQnOlxuICAgICAgaGVpZ2h0ID0gMjQ7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgaGVpZ2h0ID0gZmllbGQuc2V0dGluZ1snaGVpZ2h0J10gfHwgMDtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBoZWlnaHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0V2lkdGgoZmllbGQpIHtcbiAgbGV0IHdpZHRoID0gMDtcbiAgc3dpdGNoIChmaWVsZC50eXBlKSB7XG4gICAgY2FzZSAnc2lnbmF0dXJlJzpcbiAgICBjYXNlICdpbml0aWFsJzpcbiAgICAgIHdpZHRoID0gODIuNjM2MzYzNjM2MzY7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdjaGVja2JveCc6XG4gICAgY2FzZSAnY2hlY2tib3hfZ3JvdXAnOlxuICAgIGNhc2UgJ3JhZGlvX2J1dHRvbl9ncm91cCc6XG4gICAgICB3aWR0aCA9IDEzLjU7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdhdHRhY2htZW50JzpcbiAgICBjYXNlICdwYXltZW50JzpcbiAgICAgIHdpZHRoID0gMjQ7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdkYXRlJzpcbiAgICAgIHdpZHRoID0gNjQ7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdkcm9wZG93bic6XG4gICAgICB3aWR0aCA9IGZpZWxkLnNldHRpbmdbJ3dpZHRoJ10gfHwgNjQ7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgd2lkdGggPSBmaWVsZC5zZXR0aW5nWyd3aWR0aCddIHx8IDA7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4gd2lkdGg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSVG9wKHksIGZpZWxkSGVpZ2h0LCBpVGV4dEhlaWdodCwgeVJhdGlvKSB7XG4gIHJldHVybiBpVGV4dEhlaWdodCAtICgoeSArIGZpZWxkSGVpZ2h0KSAqIHlSYXRpbyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSTGVmdCh4LCByYXRpbykge1xuICByZXR1cm4geCAqIHJhdGlvO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UlZhbHVlKHksIHJhdGlvKSB7XG4gIHJldHVybiB5ICogcmF0aW87XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRVSUZpZWxkU3R5bGluZyhmaWVsZCkge1xuICBjb25zdCBoZWlnaHQgPSBnZXREZWZhdWx0SGVpZ2h0KGZpZWxkKTtcbiAgY29uc3Qgc3R5bGUgPSB7XG4gICAgbGVmdDogZmllbGQuc2V0dGluZy54ICsgJ3B4JyxcbiAgICBib3R0b206IGZpZWxkLnNldHRpbmcueSArICdweCcsXG4gICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgd2lkdGg6ICcxMDAlJ1xuICB9O1xuXG4gIHN3aXRjaCAoZmllbGQudHlwZSkge1xuICAgIGNhc2UgJ3RleHRib3gnOlxuICAgIGNhc2UgJ2RhdGUnOlxuICAgIGNhc2UgJ3RpbWVzdGFtcCc6XG4gICAgY2FzZSAncGxhY2Vob2xkZXInOlxuICAgIGNhc2UgJ2Ryb3Bkb3duJzpcbiAgICAgIHN0eWxlWydtYXhIZWlnaHQnXSA9IGhlaWdodCArICdweCc7XG4gICAgICBzdHlsZVsnbWF4V2lkdGgnXSA9IGZpZWxkLnNldHRpbmcud2lkdGggKyAncHgnO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnY2hlY2tib3gnOlxuICAgIGNhc2UgJ2NoZWNrYm94X2dyb3VwJzpcbiAgICBjYXNlICdyYWRpb19idXR0b25fZ3JvdXAnOlxuICAgICAgc3R5bGVbJ21heEhlaWdodCddID0gMTMuNSArICdweCc7XG4gICAgICBzdHlsZVsnbWF4V2lkdGgnXSA9IDEzLjUgKyAncHgnO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYXR0YWNobWVudCc6XG4gICAgY2FzZSAncGF5bWVudCc6XG4gICAgICBzdHlsZVsnbWF4SGVpZ2h0J10gPSAyNCArICdweCc7XG4gICAgICBzdHlsZVsnbWF4V2lkdGgnXSA9IDI0ICsgJ3B4JztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3NpZ25hdHVyZSc6XG4gICAgY2FzZSAnaW5pdGlhbCc6XG4gICAgICBzdHlsZVsnbWF4SGVpZ2h0J10gPSAzNiArICdweCc7XG4gICAgICBzdHlsZVsnbWF4V2lkdGgnXSA9IDgyLjYzNjM2MzYzNjM2ICsgJ3B4JztcbiAgICAgIHN0eWxlWydsaW5lLWhlaWdodCddID0gMzYgKyAncHgnO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBzdHlsZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBibG9iVG9CYXNlNjQoaW1hZ2U6IEJsb2IpIHtcbiAgY29uc3QgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgZmlsZVJlYWRlci5vbmVycm9yID0gKCkgPT4ge1xuICAgICAgcmVqZWN0KG5ldyBET01FeGNlcHRpb24oXCJQcm9ibGVtIHJlYWRpbmcgYmxvYi5cIikpO1xuICAgIH1cblxuICAgIGZpbGVSZWFkZXIub25sb2FkID0gKCkgPT4ge1xuICAgICAgcmVzb2x2ZShmaWxlUmVhZGVyLnJlc3VsdCk7XG4gICAgfVxuXG4gICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGltYWdlKTtcbiAgfSlcbn1cbiJdfQ==