/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, PLATFORM_ID, RendererFactory2, ViewEncapsulation, Injector } from '@angular/core';
import { isPlatformBrowser, DOCUMENT } from '@angular/common';
import { Title, Meta } from '@angular/platform-browser';
import { filter, map, switchMap } from 'rxjs/operators';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { VerdocsStateService, VerdocsTokenObjectService } from '@verdocs/tokens';
import { EssentialsConfigToken } from '../essentials.module';
/** @enum {string} */
var Robots = {
    Noindex: 'Noindex',
    Index: 'Index',
    Follow: 'Follow',
    Noimageindex: 'Noimageindex',
    None: 'None',
    Noarchive: 'Noarchive',
    Nocache: 'Nocache',
    Nosnippet: 'Nosnippet',
};
var PageService = /** @class */ (function () {
    function PageService(titleService, injector, meta, rendererFactory, activatedRoute, router, vTokenStateService, tokenObject, platform, document) {
        this.titleService = titleService;
        this.injector = injector;
        this.meta = meta;
        this.rendererFactory = rendererFactory;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.vTokenStateService = vTokenStateService;
        this.tokenObject = tokenObject;
        this.platform = platform;
        this.document = document;
        this.segmentIsInitialized = false;
        this.lazyTitle = false;
        this._config_token = this.injector.get(EssentialsConfigToken);
    }
    /**
     * @return {?}
     */
    PageService.prototype.inti = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.initializeSegment();
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.additionalSetupForWidgets();
        }), 500);
        this.router.events.pipe(filter((/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return event instanceof NavigationEnd; })), map((/**
         * @return {?}
         */
        function () { return _this.activatedRoute; })), map((/**
         * @param {?} route
         * @return {?}
         */
        function (route) {
            /** @type {?} */
            var targetRoute = route;
            while (targetRoute.firstChild) {
                targetRoute = targetRoute.firstChild;
            }
            return targetRoute;
        })), switchMap((/**
         * @param {?} route
         * @return {?}
         */
        function (route) { return route.data; })), map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.lazyTitle = data.lazyTitle;
            return data.title;
        }))).subscribe((/**
         * @param {?} title
         * @return {?}
         */
        function (title) {
            if (_this.lazyTitle) {
                _this.lazyTitle = false;
            }
            else {
                _this.setTitleAndRecord(title);
            }
        }));
    };
    /**
     * @param {?} title
     * @param {?=} pageName
     * @return {?}
     */
    PageService.prototype.setTitleAndRecord = /**
     * @param {?} title
     * @param {?=} pageName
     * @return {?}
     */
    function (title, pageName) {
        /** @type {?} */
        var newTitle = 'Verdocs';
        if (isPlatformBrowser(this.platform)) {
            if (this.document.cookie.includes(this._config_token.rForm_cookie_name)) {
                newTitle = title ? title : 'Verdocs';
                window['analytics'].page(pageName || newTitle);
            }
        }
        else {
            newTitle = 'Verdocs' + (title ? " | " + title : '');
        }
        this.titleService.setTitle(newTitle);
    };
    /**
     * @param {?} property
     * @param {?} content
     * @return {?}
     */
    PageService.prototype.setMetaProperty = /**
     * @param {?} property
     * @param {?} content
     * @return {?}
     */
    function (property, content) {
        if (!!content) {
            if (!!this.getMetaTagProperty(property)) {
                this.meta.updateTag({ property: property, content: content }, "property=\"" + property + "\"");
            }
            else {
                this.meta.addTag({ property: property, content: content }, true);
            }
        }
        else {
            if (!!this.getMetaTagProperty(property)) {
                this.meta.removeTag("property=\u201C" + property + "\u201D");
            }
        }
    };
    /**
     * @param {?} property
     * @param {?} content
     * @return {?}
     */
    PageService.prototype.setMetaName = /**
     * @param {?} property
     * @param {?} content
     * @return {?}
     */
    function (property, content) {
        if (!!content) {
            if (!!this.getMetaTagProperty(property)) {
                this.meta.updateTag({ property: property, content: content }, "name=\"" + property + "\"");
            }
            else {
                this.meta.addTag({ property: property, content: content }, true);
            }
        }
        else {
            if (!!this.getMetaTagProperty(property)) {
                this.meta.removeTag("name=\u201C" + property + "\u201D");
            }
        }
    };
    /**
     * @param {?} type
     * @param {?} title
     * @param {?} description
     * @param {?} image
     * @param {?} url
     * @return {?}
     */
    PageService.prototype.setOpenGraphMeta = /**
     * @param {?} type
     * @param {?} title
     * @param {?} description
     * @param {?} image
     * @param {?} url
     * @return {?}
     */
    function (type, title, description, image, url) {
        if (!!type) {
            this.setMetaProperty('og:type', type);
        }
        if (!!title) {
            this.setMetaProperty('og:title', title);
        }
        if (!!description) {
            this.setMetaProperty('og:description', description);
        }
        if (!!image) {
            this.setMetaProperty('og:image', image);
        }
        if (!!url) {
            this.setMetaProperty('og:url', url);
        }
        if (!!this.getMetaTagProperty('og:site_name')) {
            return;
        }
        else {
            this.meta.addTag({ property: 'og:site_name', content: 'Verdocs' });
        }
    };
    /**
     * @param {...?} robot_values
     * @return {?}
     */
    PageService.prototype.setRobotMeta = /**
     * @param {...?} robot_values
     * @return {?}
     */
    function () {
        var robot_values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            robot_values[_i] = arguments[_i];
        }
        /** @type {?} */
        var parameters = '';
        for (var x = 0; x < robot_values.length; x++) {
            if (robot_values[x]) {
                if (x === robot_values.length - 1) {
                    parameters += robot_values[x];
                }
                else {
                    parameters += robot_values[x] + ", ";
                }
            }
        }
        /** @type {?} */
        var robot_parameters = parameters;
        this.setMetaName('robots', robot_parameters);
    };
    /**
     * @param {?} tag
     * @return {?}
     */
    PageService.prototype.setCanonicalUrl = /**
     * @param {?} tag
     * @return {?}
     */
    function (tag) {
        if (!tag.href) {
            tag['href'] = this.document.url;
        }
        this.addTag(tag);
    };
    /**
     * @param {?} content
     * @return {?}
     */
    PageService.prototype.setDescriptionMeta = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        if (!!this.getMetaTag('description')) {
            if (content) {
                this.meta.updateTag({ name: 'description', content: content }, "name='description'");
            }
            else {
                this.meta.removeTag("name='description'");
            }
        }
        else {
            if (content) {
                this.meta.addTag({ name: 'description', content: content }, true);
            }
        }
    };
    /**
     * @param {?} name
     * @return {?}
     */
    PageService.prototype.getMetaTag = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        return this.meta.getTag("name='" + name + "'");
    };
    /**
     * @param {?} property
     * @return {?}
     */
    PageService.prototype.getMetaTagProperty = /**
     * @param {?} property
     * @return {?}
     */
    function (property) {
        return this.meta.getTag("property='" + property + "'");
    };
    /**
     * @private
     * @return {?}
     */
    PageService.prototype.initializeSegment = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (isPlatformBrowser(this.platform)) {
            /** @type {?} */
            var analytics_1 = window['analytics'];
            if (document.cookie.includes(this._config_token.rForm_cookie_name)) {
                /** @type {?} */
                var idTokenSubscription_1 = this.vTokenStateService.decodedIdTokenSubject.subscribe((/**
                 * @param {?} decodedIdToken
                 * @return {?}
                 */
                function (decodedIdToken) {
                    idTokenSubscription_1.unsubscribe();
                    if (!_this.segmentIsInitialized) {
                        _this.segmentIsInitialized = true;
                        analytics_1.reset();
                        /** @type {?} */
                        var profile = _this.tokenObject.getProfile();
                        analytics_1.identify(decodedIdToken.sub, {
                            userId: decodedIdToken.sub,
                            email: decodedIdToken.email,
                            name: decodedIdToken.name,
                            'Verdoc plan': _this.planType('verdoc'),
                            'Organization plan': _this.planType('organization'),
                            'Current Profile Id': _this.tokenObject.getProfileID(),
                            'Current Company': profile.organization.name,
                            company: {
                                id: profile.organization_id,
                                name: profile.organization.name
                            }
                        }, {
                            Intercom: { hideDefaultLauncher: true }
                        });
                    }
                }));
            }
        }
    };
    /**
     * @return {?}
     */
    PageService.prototype.robotEnum = /**
     * @return {?}
     */
    function () {
        return Robots;
    };
    /**
     * @private
     * @param {?} product
     * @return {?}
     */
    PageService.prototype.planType = /**
     * @private
     * @param {?} product
     * @return {?}
     */
    function (product) {
        /** @type {?} */
        var productName = 'undefined';
        switch (product) {
            case 'verdoc':
                productName = 'env';
                break;
            case 'organization':
                productName = 'org';
                break;
        }
        /** @type {?} */
        var plan = this.tokenObject.getPlans().find((/**
         * @param {?} p
         * @return {?}
         */
        function (p) {
            return p.includes(productName);
        }));
        /** @type {?} */
        var planType = 'None';
        if (plan) {
            if (productName === 'env') {
                planType = plan.includes('pro') ? 'Pro' : 'Essential';
            }
            else {
                planType = plan.includes('premium') ? 'Premium' : 'Standard';
            }
        }
        return planType;
    };
    /**
     * @param {?} tag
     * @param {?=} forceCreation
     * @return {?}
     */
    PageService.prototype.addTag = /**
     * @param {?} tag
     * @param {?=} forceCreation
     * @return {?}
     */
    function (tag, forceCreation) {
        /** @type {?} */
        var renderer = this.rendererFactory.createRenderer(this.document, {
            id: '-1',
            encapsulation: ViewEncapsulation.None,
            styles: [],
            data: {}
        });
        /** @type {?} */
        var link = renderer.createElement('link');
        /** @type {?} */
        var head = this.document.head;
        /** @type {?} */
        var selector = this._parseSelector(tag);
        Object.keys(tag).forEach((/**
         * @param {?} prop
         * @return {?}
         */
        function (prop) {
            return renderer.setAttribute(link, prop, tag[prop]);
        }));
        try {
            if (head === null) {
                throw new Error('<head> not found within DOCUMENT.');
            }
            /** @type {?} */
            var existingLink = renderer.selectRootElement(selector);
            if (!!existingLink) {
                renderer.removeAttribute(existingLink, 'href');
                renderer.setAttribute(existingLink, 'href', tag['href']);
            }
            else {
                renderer.appendChild(head, link);
            }
        }
        catch (e) {
            // console.error('Error within linkService : ', e);
            renderer.appendChild(head, link);
        }
    };
    /**
     * @private
     * @param {?} tag
     * @return {?}
     */
    PageService.prototype._parseSelector = /**
     * @private
     * @param {?} tag
     * @return {?}
     */
    function (tag) {
        /** @type {?} */
        var attr = tag.rel ? 'rel' : 'hreflang';
        return "link[" + attr + "=\"" + tag[attr] + "\"]";
    };
    /**
     * @private
     * @return {?}
     */
    PageService.prototype.additionalSetupForWidgets = /**
     * @private
     * @return {?}
     */
    function () {
        if (isPlatformBrowser(this.platform)) {
            if (window['Intercom']) {
                window['Intercom']('onHide', (/**
                 * @return {?}
                 */
                function () {
                    window['intercomIsOpen'] = false;
                }));
                window['Intercom']('onShow', (/**
                 * @return {?}
                 */
                function () {
                    window['intercomIsOpen'] = true;
                }));
            }
            window['lunchIntercom'] = (/**
             * @return {?}
             */
            function () {
                if (window['Intercom']) {
                    if (window['intercomIsOpen'] && window['intercomIsOpen'] === true) {
                        window['Intercom']('hide');
                    }
                    else {
                        window['Intercom']('show');
                    }
                }
                else {
                    console.error('Intercom is not loaded!');
                }
            });
            window['lunchElevio'] = (/**
             * @return {?}
             */
            function () {
                if (window['_elev']) {
                    if (window['_elev'].widgetIsOpen()) {
                        window['_elev'].close();
                    }
                    else {
                        window['_elev'].open();
                    }
                }
                else {
                    console.error('Elevio is not loaded!');
                }
            });
        }
    };
    /** @nocollapse */
    PageService.ctorParameters = function () { return [
        { type: Title },
        { type: Injector },
        { type: Meta },
        { type: RendererFactory2 },
        { type: ActivatedRoute },
        { type: Router },
        { type: VerdocsStateService },
        { type: VerdocsTokenObjectService },
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    return PageService;
}());
export { PageService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PageService.prototype._config_token;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.segmentIsInitialized;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.lazyTitle;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.titleService;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.meta;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.rendererFactory;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.activatedRoute;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.router;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.vTokenStateService;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.tokenObject;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.platform;
    /**
     * @type {?}
     * @private
     */
    PageService.prototype.document;
}
//# sourceMappingURL=data:application/json;base64,