/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector } from '@angular/core';
import { VerdocsTokenObjectService } from '@verdocs/tokens';
import { Router } from '@angular/router';
import { EssentialsConfigToken } from '../../essentials.module';
var FourOhOneDialog = /** @class */ (function () {
    function FourOhOneDialog(router, injector, vTokenObjectService) {
        this.router = router;
        this.injector = injector;
        this.vTokenObjectService = vTokenObjectService;
        this.error = null;
        this.currentProfile = null;
        this.error_code = null;
        this.error_title = null;
        this.error_message = null;
        this._config_token = this.injector.get(EssentialsConfigToken);
        this.rSecureUrl = this._config_token.rSecure_frontend_url;
        this.rFormUrl = this._config_token.rForm_frontend_url;
    }
    /**
     * @return {?}
     */
    FourOhOneDialog.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.currentProfile = this.vTokenObjectService.getProfile();
        if (this.error && this.error.hasOwnProperty('error')) {
            this.error_code = this.error.error.code || null;
            if (this.error_code) {
                this.prepareErroContent();
            }
        }
    };
    /**
     * @return {?}
     */
    FourOhOneDialog.prototype.prepareErroContent = /**
     * @return {?}
     */
    function () {
        switch (this.error_code) {
            case 'AUTH0002':
                this.error_title = 'Authorization key is missing';
                this.error_message = 'Try after ' + (this.currentProfile ? 'signing in again.' : 'signing in or signing up.');
                break;
            case 'T000001':
                this.error_title = 'This document is not accessible';
                this.error_message = (this.currentProfile ? 'Try using a different organization/account, ' : 'Try signing in, signing up, ') + 'or requesting access from the owner of this document.';
                break;
            case 'AUTH0003':
                this.error_title = 'Cannot complete your request';
                this.error_message = 'Try after ' + (this.currentProfile ? 'signing in again.' : 'signing in or signing up.');
                break;
            default:
                this.error_title = 'Your request has been denied.';
                this.error_message = null;
                break;
        }
    };
    /**
     * @return {?}
     */
    FourOhOneDialog.prototype.goToDashboard = /**
     * @return {?}
     */
    function () {
        this.router.navigate(['/dashboard']);
    };
    /**
     * @return {?}
     */
    FourOhOneDialog.prototype.signIn = /**
     * @return {?}
     */
    function () {
        if (window) {
            window.location.href = this.rSecureUrl + "/login?redirect_url=" + (this.rFormUrl + this.router.url);
        }
    };
    /**
     * @return {?}
     */
    FourOhOneDialog.prototype.signUp = /**
     * @return {?}
     */
    function () {
        if (window) {
            window.location.href = this.rSecureUrl + "/signup?redirect_url=" + (this.rFormUrl + this.router.url);
        }
    };
    FourOhOneDialog.decorators = [
        { type: Component, args: [{
                    selector: 'four-oh-one-dialog',
                    template: "<div class=\"error__container\">\n  <div class=\"error__title\">\n    {{error_title}}\n  </div>\n  <div class=\"error__body\" *ngIf=\"error_message\">\n    {{error_message}}\n  </div>\n  <div class=\"error__action\">\n    <button class=\"error__action-button left\" mat-button *ngIf=\"currentProfile\" (click)=\"goToDashboard()\">go to dashboard</button>\n    <button class=\"error__action-button left\" mat-button *ngIf=\"!currentProfile\" (click)=\"signUp()\">sign up</button>\n    <button class=\"error__action-button\" mat-button (click)=\"signIn()\">sign in</button>\n  </div>\n</div>",
                    styles: [".error__container{padding-top:8px;padding-left:8px;padding-right:8px;max-width:640px}.error__title{padding:16px 16px 8px;font-size:20px;line-height:24px;font-weight:500;color:rgba(0,0,0,.87)}.error__body{padding:16px 16px 8px;font-size:16px;line-height:24px;color:rgba(0,0,0,.54)}.error__action{padding:8px;text-align:right}.error__action-button{color:#37474f;text-transform:uppercase}.error__action-button.left{margin-right:8px}"]
                }] }
    ];
    /** @nocollapse */
    FourOhOneDialog.ctorParameters = function () { return [
        { type: Router },
        { type: Injector },
        { type: VerdocsTokenObjectService }
    ]; };
    return FourOhOneDialog;
}());
export { FourOhOneDialog };
if (false) {
    /** @type {?} */
    FourOhOneDialog.prototype.error;
    /** @type {?} */
    FourOhOneDialog.prototype.currentProfile;
    /** @type {?} */
    FourOhOneDialog.prototype.error_code;
    /** @type {?} */
    FourOhOneDialog.prototype.error_title;
    /** @type {?} */
    FourOhOneDialog.prototype.error_message;
    /** @type {?} */
    FourOhOneDialog.prototype.rSecureUrl;
    /** @type {?} */
    FourOhOneDialog.prototype.rFormUrl;
    /**
     * @type {?}
     * @private
     */
    FourOhOneDialog.prototype._config_token;
    /**
     * @type {?}
     * @private
     */
    FourOhOneDialog.prototype.router;
    /**
     * @type {?}
     * @private
     */
    FourOhOneDialog.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    FourOhOneDialog.prototype.vTokenObjectService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm91ci1vaC1vbmUuZGlhbG9nLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHZlcmRvY3MvZXNzZW50aWFscy8iLCJzb3VyY2VzIjpbImxpYi9kaWFsb2dzL2Vycm9yLWRpYWxvZ3MvZm91ci1vaC1vbmUuZGlhbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFekMsT0FBTyxFQUFvQixxQkFBcUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRWxGO0lBZ0JFLHlCQUNVLE1BQWMsRUFDZCxRQUFrQixFQUNsQixtQkFBOEM7UUFGOUMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDbEIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUEyQjtRQWJqRCxVQUFLLEdBQVEsSUFBSSxDQUFDO1FBQ2xCLG1CQUFjLEdBQVEsSUFBSSxDQUFDO1FBQzNCLGVBQVUsR0FBVyxJQUFJLENBQUM7UUFDMUIsZ0JBQVcsR0FBVyxJQUFJLENBQUM7UUFDM0Isa0JBQWEsR0FBVyxJQUFJLENBQUM7UUFXbEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxvQkFBb0IsQ0FBQztRQUMxRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUM7SUFDeEQsQ0FBQzs7OztJQUVELGtDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzVELElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNwRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7WUFDaEQsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNuQixJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQzthQUMzQjtTQUNGO0lBQ0gsQ0FBQzs7OztJQUVELDRDQUFrQjs7O0lBQWxCO1FBQ0UsUUFBUSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ3ZCLEtBQUssVUFBVTtnQkFDYixJQUFJLENBQUMsV0FBVyxHQUFHLDhCQUE4QixDQUFDO2dCQUNsRCxJQUFJLENBQUMsYUFBYSxHQUFHLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO2dCQUM5RyxNQUFNO1lBQ1IsS0FBSyxTQUFTO2dCQUNaLElBQUksQ0FBQyxXQUFXLEdBQUcsaUNBQWlDLENBQUM7Z0JBQ3JELElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDLENBQUMsOEJBQThCLENBQUMsR0FBRyx1REFBdUQsQ0FBQztnQkFDdkwsTUFBTTtZQUNSLEtBQUssVUFBVTtnQkFDYixJQUFJLENBQUMsV0FBVyxHQUFHLDhCQUE4QixDQUFDO2dCQUNsRCxJQUFJLENBQUMsYUFBYSxHQUFHLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO2dCQUM5RyxNQUFNO1lBQ1I7Z0JBQ0UsSUFBSSxDQUFDLFdBQVcsR0FBRywrQkFBK0IsQ0FBQztnQkFDbkQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7Z0JBQzFCLE1BQU07U0FDVDtJQUNILENBQUM7Ozs7SUFFRCx1Q0FBYTs7O0lBQWI7UUFDRSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7OztJQUVELGdDQUFNOzs7SUFBTjtRQUNFLElBQUksTUFBTSxFQUFFO1lBQ1YsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQU0sSUFBSSxDQUFDLFVBQVUsNkJBQXVCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUUsQ0FBQztTQUNuRztJQUNILENBQUM7Ozs7SUFFRCxnQ0FBTTs7O0lBQU47UUFDRSxJQUFJLE1BQU0sRUFBRTtZQUNWLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFNLElBQUksQ0FBQyxVQUFVLDhCQUF3QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFFLENBQUM7U0FDcEc7SUFDSCxDQUFDOztnQkF2RUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLHlsQkFBd0M7O2lCQUV6Qzs7OztnQkFSUSxNQUFNO2dCQUZhLFFBQVE7Z0JBQzNCLHlCQUF5Qjs7SUE2RWxDLHNCQUFDO0NBQUEsQUF4RUQsSUF3RUM7U0FuRVksZUFBZTs7O0lBQzFCLGdDQUF5Qjs7SUFDekIseUNBQWtDOztJQUNsQyxxQ0FBaUM7O0lBQ2pDLHNDQUFrQzs7SUFDbEMsd0NBQW9DOztJQUNwQyxxQ0FBMEI7O0lBQzFCLG1DQUF3Qjs7Ozs7SUFFeEIsd0NBQXdDOzs7OztJQUd0QyxpQ0FBc0I7Ozs7O0lBQ3RCLG1DQUEwQjs7Ozs7SUFDMUIsOENBQXNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWZXJkb2NzVG9rZW5PYmplY3RTZXJ2aWNlIH0gZnJvbSAnQHZlcmRvY3MvdG9rZW5zJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IEVzc2VudGlhbHNDb25maWcsIEVzc2VudGlhbHNDb25maWdUb2tlbiB9IGZyb20gJy4uLy4uL2Vzc2VudGlhbHMubW9kdWxlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm91ci1vaC1vbmUtZGlhbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZvdXItb2gtb25lLmRpYWxvZy5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZm91ci1vaC1vbmUuZGlhbG9nLnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBGb3VyT2hPbmVEaWFsb2cgaW1wbGVtZW50cyBPbkluaXQge1xuICBwdWJsaWMgZXJyb3I6IGFueSA9IG51bGw7XG4gIHB1YmxpYyBjdXJyZW50UHJvZmlsZTogYW55ID0gbnVsbDtcbiAgcHVibGljIGVycm9yX2NvZGU6IHN0cmluZyA9IG51bGw7XG4gIHB1YmxpYyBlcnJvcl90aXRsZTogc3RyaW5nID0gbnVsbDtcbiAgcHVibGljIGVycm9yX21lc3NhZ2U6IHN0cmluZyA9IG51bGw7XG4gIHB1YmxpYyByU2VjdXJlVXJsOiBzdHJpbmc7XG4gIHB1YmxpYyByRm9ybVVybDogc3RyaW5nO1xuXG4gIHByaXZhdGUgX2NvbmZpZ190b2tlbjogRXNzZW50aWFsc0NvbmZpZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgIHByaXZhdGUgdlRva2VuT2JqZWN0U2VydmljZTogVmVyZG9jc1Rva2VuT2JqZWN0U2VydmljZVxuICApIHtcbiAgICB0aGlzLl9jb25maWdfdG9rZW4gPSB0aGlzLmluamVjdG9yLmdldChFc3NlbnRpYWxzQ29uZmlnVG9rZW4pO1xuICAgIHRoaXMuclNlY3VyZVVybCA9IHRoaXMuX2NvbmZpZ190b2tlbi5yU2VjdXJlX2Zyb250ZW5kX3VybDtcbiAgICB0aGlzLnJGb3JtVXJsID0gdGhpcy5fY29uZmlnX3Rva2VuLnJGb3JtX2Zyb250ZW5kX3VybDtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuY3VycmVudFByb2ZpbGUgPSB0aGlzLnZUb2tlbk9iamVjdFNlcnZpY2UuZ2V0UHJvZmlsZSgpO1xuICAgIGlmICh0aGlzLmVycm9yICYmIHRoaXMuZXJyb3IuaGFzT3duUHJvcGVydHkoJ2Vycm9yJykpIHtcbiAgICAgIHRoaXMuZXJyb3JfY29kZSA9IHRoaXMuZXJyb3IuZXJyb3IuY29kZSB8fCBudWxsO1xuICAgICAgaWYgKHRoaXMuZXJyb3JfY29kZSkge1xuICAgICAgICB0aGlzLnByZXBhcmVFcnJvQ29udGVudCgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByZXBhcmVFcnJvQ29udGVudCgpIHtcbiAgICBzd2l0Y2ggKHRoaXMuZXJyb3JfY29kZSkge1xuICAgICAgY2FzZSAnQVVUSDAwMDInOlxuICAgICAgICB0aGlzLmVycm9yX3RpdGxlID0gJ0F1dGhvcml6YXRpb24ga2V5IGlzIG1pc3NpbmcnO1xuICAgICAgICB0aGlzLmVycm9yX21lc3NhZ2UgPSAnVHJ5IGFmdGVyICcgKyAodGhpcy5jdXJyZW50UHJvZmlsZSA/ICdzaWduaW5nIGluIGFnYWluLicgOiAnc2lnbmluZyBpbiBvciBzaWduaW5nIHVwLicpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1QwMDAwMDEnOlxuICAgICAgICB0aGlzLmVycm9yX3RpdGxlID0gJ1RoaXMgZG9jdW1lbnQgaXMgbm90IGFjY2Vzc2libGUnO1xuICAgICAgICB0aGlzLmVycm9yX21lc3NhZ2UgPSAodGhpcy5jdXJyZW50UHJvZmlsZSA/ICdUcnkgdXNpbmcgYSBkaWZmZXJlbnQgb3JnYW5pemF0aW9uL2FjY291bnQsICcgOiAnVHJ5IHNpZ25pbmcgaW4sIHNpZ25pbmcgdXAsICcpICsgJ29yIHJlcXVlc3RpbmcgYWNjZXNzIGZyb20gdGhlIG93bmVyIG9mIHRoaXMgZG9jdW1lbnQuJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdBVVRIMDAwMyc6XG4gICAgICAgIHRoaXMuZXJyb3JfdGl0bGUgPSAnQ2Fubm90IGNvbXBsZXRlIHlvdXIgcmVxdWVzdCc7XG4gICAgICAgIHRoaXMuZXJyb3JfbWVzc2FnZSA9ICdUcnkgYWZ0ZXIgJyArICh0aGlzLmN1cnJlbnRQcm9maWxlID8gJ3NpZ25pbmcgaW4gYWdhaW4uJyA6ICdzaWduaW5nIGluIG9yIHNpZ25pbmcgdXAuJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhpcy5lcnJvcl90aXRsZSA9ICdZb3VyIHJlcXVlc3QgaGFzIGJlZW4gZGVuaWVkLic7XG4gICAgICAgIHRoaXMuZXJyb3JfbWVzc2FnZSA9IG51bGw7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGdvVG9EYXNoYm9hcmQoKSB7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoWycvZGFzaGJvYXJkJ10pO1xuICB9XG5cbiAgc2lnbkluKCkge1xuICAgIGlmICh3aW5kb3cpIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYCR7dGhpcy5yU2VjdXJlVXJsfS9sb2dpbj9yZWRpcmVjdF91cmw9JHt0aGlzLnJGb3JtVXJsICsgdGhpcy5yb3V0ZXIudXJsfWA7XG4gICAgfVxuICB9XG5cbiAgc2lnblVwKCkge1xuICAgIGlmICh3aW5kb3cpIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYCR7dGhpcy5yU2VjdXJlVXJsfS9zaWdudXA/cmVkaXJlY3RfdXJsPSR7dGhpcy5yRm9ybVVybCArIHRoaXMucm91dGVyLnVybH1gO1xuICAgIH1cbiAgfVxufVxuIl19