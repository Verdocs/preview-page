/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, InjectionToken } from '@angular/core';
import { TokensModule } from '@verdocs/tokens';
import { ValidatorService } from './validators/validator.service';
import { AuthGuardService } from './guards/auth-guard.service';
import { DocumentsService } from './documents/document.service';
import { EnvelopRemindersService } from './documents/envelope-reminders.service';
import { RecipientService } from './recipients/recipients.service';
import { BuilderService } from './templates/builder.service';
import { TemplatesRemindersService } from './templates/template-reminders.service';
import { TemplatesGuardService } from './templates/templates.guard';
import { TemplatesService } from './templates/templates.service';
/**
 * @record
 */
export function VSDKConfig() { }
if (false) {
    /** @type {?} */
    VSDKConfig.prototype.production;
    /** @type {?} */
    VSDKConfig.prototype.domain;
    /** @type {?} */
    VSDKConfig.prototype.rForm_backend_url;
    /** @type {?} */
    VSDKConfig.prototype.rForm_frontend_url;
    /** @type {?} */
    VSDKConfig.prototype.rSecure_frontend_url;
    /** @type {?} */
    VSDKConfig.prototype.rSecure_backend_url;
    /** @type {?} */
    VSDKConfig.prototype.rAccount_frontend_url;
    /** @type {?} */
    VSDKConfig.prototype.rAccount_backend_url;
    /** @type {?} */
    VSDKConfig.prototype.rNotification_backend_url;
    /** @type {?} */
    VSDKConfig.prototype.loginURL;
    /** @type {?} */
    VSDKConfig.prototype.origin;
    /** @type {?} */
    VSDKConfig.prototype.plans;
}
/** @type {?} */
export const VSDKConfigToken = new InjectionToken('VSDKConfig');
export class AngularApiModule {
    /**
     * @param {?} config
     * @return {?}
     */
    static initSDK(config) {
        return {
            ngModule: AngularApiModule,
            imports: [
                TokensModule.initInterceptor({
                    cookieName: '',
                    domain: config.domain,
                    origin: config.origin,
                    verdocs_name: 'rForm',
                    account_name: 'rAccount',
                    loginURL: config.loginURL,
                    production: config.production
                })
            ],
            providers: [
                {
                    provide: VSDKConfigToken,
                    useValue: config
                },
                ValidatorService,
                AuthGuardService,
                DocumentsService,
                EnvelopRemindersService,
                RecipientService,
                BuilderService,
                TemplatesGuardService,
                TemplatesRemindersService,
                TemplatesService
            ]
        };
    }
}
AngularApiModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                providers: []
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1hcGkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHZlcmRvY3Mvc2RrLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItYXBpLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNuRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7OztBQUVqRSxnQ0FpQkM7OztJQWhCQyxnQ0FBb0I7O0lBQ3BCLDRCQUFlOztJQUNmLHVDQUEwQjs7SUFDMUIsd0NBQTJCOztJQUMzQiwwQ0FBNkI7O0lBQzdCLHlDQUE0Qjs7SUFDNUIsMkNBQThCOztJQUM5QiwwQ0FBNkI7O0lBQzdCLCtDQUFrQzs7SUFDbEMsOEJBQWlCOztJQUNqQiw0QkFBNkI7O0lBQzdCLDJCQUlDOzs7QUFHSCxNQUFNLE9BQU8sZUFBZSxHQUFHLElBQUksY0FBYyxDQUFhLFlBQVksQ0FBQztBQVMzRSxNQUFNLE9BQU8sZ0JBQWdCOzs7OztJQUMzQixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQWtCO1FBQy9CLE9BQU87WUFDTCxRQUFRLEVBQUUsZ0JBQWdCO1lBQzFCLE9BQU8sRUFBRTtnQkFDUCxZQUFZLENBQUMsZUFBZSxDQUFDO29CQUMzQixVQUFVLEVBQUUsRUFBRTtvQkFDZCxNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU07b0JBQ3JCLE1BQU0sRUFBRSxNQUFNLENBQUMsTUFBTTtvQkFDckIsWUFBWSxFQUFFLE9BQU87b0JBQ3JCLFlBQVksRUFBRSxVQUFVO29CQUN4QixRQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVE7b0JBQ3pCLFVBQVUsRUFBRSxNQUFNLENBQUMsVUFBVTtpQkFDOUIsQ0FBQzthQUNIO1lBQ0QsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxlQUFlO29CQUN4QixRQUFRLEVBQUUsTUFBTTtpQkFDakI7Z0JBQ0QsZ0JBQWdCO2dCQUNoQixnQkFBZ0I7Z0JBQ2hCLGdCQUFnQjtnQkFDaEIsdUJBQXVCO2dCQUN2QixnQkFBZ0I7Z0JBQ2hCLGNBQWM7Z0JBQ2QscUJBQXFCO2dCQUNyQix5QkFBeUI7Z0JBQ3pCLGdCQUFnQjthQUNqQjtTQUNGLENBQUE7SUFDSCxDQUFDOzs7WUF0Q0YsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxFQUNSO2dCQUNELFNBQVMsRUFBRSxFQUVWO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRva2Vuc01vZHVsZSB9IGZyb20gJ0B2ZXJkb2NzL3Rva2Vucyc7XG5cbmltcG9ydCB7IFZhbGlkYXRvclNlcnZpY2UgfSBmcm9tICcuL3ZhbGlkYXRvcnMvdmFsaWRhdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXV0aEd1YXJkU2VydmljZSB9IGZyb20gJy4vZ3VhcmRzL2F1dGgtZ3VhcmQuc2VydmljZSc7XG5pbXBvcnQgeyBEb2N1bWVudHNTZXJ2aWNlIH0gZnJvbSAnLi9kb2N1bWVudHMvZG9jdW1lbnQuc2VydmljZSc7XG5pbXBvcnQgeyBFbnZlbG9wUmVtaW5kZXJzU2VydmljZSB9IGZyb20gJy4vZG9jdW1lbnRzL2VudmVsb3BlLXJlbWluZGVycy5zZXJ2aWNlJztcbmltcG9ydCB7IFJlY2lwaWVudFNlcnZpY2UgfSBmcm9tICcuL3JlY2lwaWVudHMvcmVjaXBpZW50cy5zZXJ2aWNlJztcbmltcG9ydCB7IEJ1aWxkZXJTZXJ2aWNlIH0gZnJvbSAnLi90ZW1wbGF0ZXMvYnVpbGRlci5zZXJ2aWNlJztcbmltcG9ydCB7IFRlbXBsYXRlc1JlbWluZGVyc1NlcnZpY2UgfSBmcm9tICcuL3RlbXBsYXRlcy90ZW1wbGF0ZS1yZW1pbmRlcnMuc2VydmljZSc7XG5pbXBvcnQgeyBUZW1wbGF0ZXNHdWFyZFNlcnZpY2UgfSBmcm9tICcuL3RlbXBsYXRlcy90ZW1wbGF0ZXMuZ3VhcmQnO1xuaW1wb3J0IHsgVGVtcGxhdGVzU2VydmljZSB9IGZyb20gJy4vdGVtcGxhdGVzL3RlbXBsYXRlcy5zZXJ2aWNlJztcblxuZXhwb3J0IGludGVyZmFjZSBWU0RLQ29uZmlnIHtcbiAgcHJvZHVjdGlvbjogYm9vbGVhbjtcbiAgZG9tYWluOiBzdHJpbmc7XG4gIHJGb3JtX2JhY2tlbmRfdXJsOiBzdHJpbmc7XG4gIHJGb3JtX2Zyb250ZW5kX3VybDogc3RyaW5nO1xuICByU2VjdXJlX2Zyb250ZW5kX3VybDogc3RyaW5nO1xuICByU2VjdXJlX2JhY2tlbmRfdXJsOiBzdHJpbmc7XG4gIHJBY2NvdW50X2Zyb250ZW5kX3VybDogc3RyaW5nO1xuICByQWNjb3VudF9iYWNrZW5kX3VybDogc3RyaW5nO1xuICByTm90aWZpY2F0aW9uX2JhY2tlbmRfdXJsOiBzdHJpbmc7XG4gIGxvZ2luVVJMOiBzdHJpbmc7XG4gIG9yaWdpbjogJ3JBY2NvdW50JyB8ICdyRm9ybSc7XG4gIHBsYW5zOiB7XG4gICAgJ2xldmVsLTEnOiBzdHJpbmc7XG4gICAgJ2xldmVsLTInOiBzdHJpbmc7XG4gICAgJ2xldmVsLTMnOiBzdHJpbmc7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IFZTREtDb25maWdUb2tlbiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxWU0RLQ29uZmlnPignVlNES0NvbmZpZycpO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJBcGlNb2R1bGUge1xuICBzdGF0aWMgaW5pdFNESyhjb25maWc6IFZTREtDb25maWcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IEFuZ3VsYXJBcGlNb2R1bGUsXG4gICAgICBpbXBvcnRzOiBbXG4gICAgICAgIFRva2Vuc01vZHVsZS5pbml0SW50ZXJjZXB0b3Ioe1xuICAgICAgICAgIGNvb2tpZU5hbWU6ICcnLFxuICAgICAgICAgIGRvbWFpbjogY29uZmlnLmRvbWFpbixcbiAgICAgICAgICBvcmlnaW46IGNvbmZpZy5vcmlnaW4sXG4gICAgICAgICAgdmVyZG9jc19uYW1lOiAnckZvcm0nLFxuICAgICAgICAgIGFjY291bnRfbmFtZTogJ3JBY2NvdW50JyxcbiAgICAgICAgICBsb2dpblVSTDogY29uZmlnLmxvZ2luVVJMLFxuICAgICAgICAgIHByb2R1Y3Rpb246IGNvbmZpZy5wcm9kdWN0aW9uXG4gICAgICAgIH0pXG4gICAgICBdLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBWU0RLQ29uZmlnVG9rZW4sXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZ1xuICAgICAgICB9LFxuICAgICAgICBWYWxpZGF0b3JTZXJ2aWNlLFxuICAgICAgICBBdXRoR3VhcmRTZXJ2aWNlLFxuICAgICAgICBEb2N1bWVudHNTZXJ2aWNlLFxuICAgICAgICBFbnZlbG9wUmVtaW5kZXJzU2VydmljZSxcbiAgICAgICAgUmVjaXBpZW50U2VydmljZSxcbiAgICAgICAgQnVpbGRlclNlcnZpY2UsXG4gICAgICAgIFRlbXBsYXRlc0d1YXJkU2VydmljZSxcbiAgICAgICAgVGVtcGxhdGVzUmVtaW5kZXJzU2VydmljZSxcbiAgICAgICAgVGVtcGxhdGVzU2VydmljZVxuICAgICAgXVxuICAgIH1cbiAgfVxufVxuIl19