/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ReplaySubject } from 'rxjs';
export class BuilderService {
    constructor() {
        this.sideNavStateSubject = new ReplaySubject();
        this.recipientSideNavStateSubject = new ReplaySubject(1, 100);
        this.initiateAutofocus = new ReplaySubject();
        this.recipientAutoFocus = new ReplaySubject();
        this.deleteRoleSubject = new ReplaySubject(1, 100);
        this.hasActiveRoleSubject = new ReplaySubject();
    }
    // constructor() {}
    /**
     * @return {?}
     */
    toggleSideNav() {
        this.sideNavState = !this.sideNavState;
        this.sideNavStateSubject.next(this.sideNavState);
        if (this.sideNavState === false) {
            this.initiateAutofocus.next(false);
        }
    }
    /**
     * @return {?}
     */
    toggleRecipientSideNav() {
        this.recipientSideNavState = !this.recipientSideNavState;
        this.recipientSideNavStateSubject.next(this.recipientSideNavState);
        if (this.recipientSideNavState === false) {
            this.recipientAutoFocus.next(false);
        }
    }
    /**
     * @return {?}
     */
    openSideNav() {
        this.sideNavState = true;
        this.sideNavStateSubject.next(this.sideNavState);
    }
    /**
     * @return {?}
     */
    openRecipientSideNav() {
        this.recipientSideNavState = true;
        this.recipientSideNavStateSubject.next(this.recipientSideNavState);
    }
    /**
     * @return {?}
     */
    closeSideNav() {
        this.sideNavState = false;
        this.sideNavStateSubject.next(this.sideNavState);
        this.initiateAutofocus.next(false);
    }
    /**
     * @return {?}
     */
    closeRecipientSideNav() {
        this.recipientSideNavState = false;
        this.recipientSideNavStateSubject.next(this.recipientSideNavState);
        this.recipientAutoFocus.next(false);
    }
    /**
     * @param {?} role
     * @return {?}
     */
    setActiveRole(role) {
        this.activeRole = role;
        this.hasActiveRoleSubject.next(true);
    }
    /**
     * @return {?}
     */
    deleteRole() {
        if (!!this.activeRole) {
            this.deleteRoleSubject.next(this.activeRole);
            this.activeRole = null;
            this.hasActiveRoleSubject.next(false);
        }
    }
    /**
     * @return {?}
     */
    getSideNavState() {
        return this.sideNavState;
    }
    /**
     * @return {?}
     */
    getRecipientSideNavState() {
        return this.recipientSideNavState;
    }
}
BuilderService.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    BuilderService.prototype.sideNavState;
    /**
     * @type {?}
     * @private
     */
    BuilderService.prototype.recipientSideNavState;
    /**
     * @type {?}
     * @private
     */
    BuilderService.prototype.activeRole;
    /** @type {?} */
    BuilderService.prototype.sideNavStateSubject;
    /** @type {?} */
    BuilderService.prototype.recipientSideNavStateSubject;
    /** @type {?} */
    BuilderService.prototype.initiateAutofocus;
    /** @type {?} */
    BuilderService.prototype.recipientAutoFocus;
    /** @type {?} */
    BuilderService.prototype.deleteRoleSubject;
    /** @type {?} */
    BuilderService.prototype.hasActiveRoleSubject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGRlci1zZXR0aW5ncy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHZlcmRvY3MvZXNzZW50aWFscy8iLCJzb3VyY2VzIjpbImxpYi9idWlsZGVyL2J1aWxkZXItc2V0dGluZ3Muc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3JDLE1BQU0sT0FBTyxjQUFjO0lBRDNCO1FBT1Msd0JBQW1CLEdBQTJCLElBQUksYUFBYSxFQUFFLENBQUM7UUFDbEUsaUNBQTRCLEdBQTJCLElBQUksYUFBYSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNqRixzQkFBaUIsR0FBMkIsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUNoRSx1QkFBa0IsR0FBMkIsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUNqRSxzQkFBaUIsR0FBdUIsSUFBSSxhQUFhLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFBO1FBQ2pFLHlCQUFvQixHQUEyQixJQUFJLGFBQWEsRUFBRSxDQUFDO0lBOEQ1RSxDQUFDOzs7OztJQTFEQyxhQUFhO1FBQ1gsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDdkMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDakQsSUFBSSxJQUFJLENBQUMsWUFBWSxLQUFLLEtBQUssRUFBRTtZQUMvQixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQzs7OztJQUVELHNCQUFzQjtRQUNwQixJQUFJLENBQUMscUJBQXFCLEdBQUcsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUM7UUFDekQsSUFBSSxDQUFDLDRCQUE0QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUNuRSxJQUFJLElBQUksQ0FBQyxxQkFBcUIsS0FBSyxLQUFLLEVBQUU7WUFDeEMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNyQztJQUNILENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7OztJQUVELG9CQUFvQjtRQUNsQixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDckUsQ0FBQzs7OztJQUVELFlBQVk7UUFDVixJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUMxQixJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFRCxxQkFBcUI7UUFDbkIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLEtBQUssQ0FBQztRQUNuQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7Ozs7SUFFRCxhQUFhLENBQUMsSUFBSTtRQUNoQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Ozs7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNyQixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUM3QyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztZQUN2QixJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3ZDO0lBQ0gsQ0FBQzs7OztJQUVELGVBQWU7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQzs7OztJQUVELHdCQUF3QjtRQUN0QixPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQztJQUNwQyxDQUFDOzs7WUF6RUYsVUFBVTs7Ozs7OztJQUdULHNDQUE4Qjs7Ozs7SUFDOUIsK0NBQXVDOzs7OztJQUN2QyxvQ0FBd0I7O0lBRXhCLDZDQUF5RTs7SUFDekUsc0RBQXdGOztJQUN4RiwyQ0FBdUU7O0lBQ3ZFLDRDQUF3RTs7SUFDeEUsMkNBQXdFOztJQUN4RSw4Q0FBMEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZXBsYXlTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCdWlsZGVyU2VydmljZSB7XG5cbiAgcHJpdmF0ZSBzaWRlTmF2U3RhdGU6IGJvb2xlYW47XG4gIHByaXZhdGUgcmVjaXBpZW50U2lkZU5hdlN0YXRlOiBib29sZWFuO1xuICBwcml2YXRlIGFjdGl2ZVJvbGU6IGFueTtcblxuICBwdWJsaWMgc2lkZU5hdlN0YXRlU3ViamVjdDogUmVwbGF5U3ViamVjdDxib29sZWFuPiA9IG5ldyBSZXBsYXlTdWJqZWN0KCk7XG4gIHB1YmxpYyByZWNpcGllbnRTaWRlTmF2U3RhdGVTdWJqZWN0OiBSZXBsYXlTdWJqZWN0PGJvb2xlYW4+ID0gbmV3IFJlcGxheVN1YmplY3QoMSwgMTAwKTtcbiAgcHVibGljIGluaXRpYXRlQXV0b2ZvY3VzOiBSZXBsYXlTdWJqZWN0PGJvb2xlYW4+ID0gbmV3IFJlcGxheVN1YmplY3QoKTtcbiAgcHVibGljIHJlY2lwaWVudEF1dG9Gb2N1czogUmVwbGF5U3ViamVjdDxib29sZWFuPiA9IG5ldyBSZXBsYXlTdWJqZWN0KCk7XG4gIHB1YmxpYyBkZWxldGVSb2xlU3ViamVjdDogUmVwbGF5U3ViamVjdDxhbnk+ID0gbmV3IFJlcGxheVN1YmplY3QoMSwgMTAwKVxuICBwdWJsaWMgaGFzQWN0aXZlUm9sZVN1YmplY3Q6IFJlcGxheVN1YmplY3Q8Ym9vbGVhbj4gPSBuZXcgUmVwbGF5U3ViamVjdCgpO1xuXG4gIC8vIGNvbnN0cnVjdG9yKCkge31cblxuICB0b2dnbGVTaWRlTmF2KCkge1xuICAgIHRoaXMuc2lkZU5hdlN0YXRlID0gIXRoaXMuc2lkZU5hdlN0YXRlO1xuICAgIHRoaXMuc2lkZU5hdlN0YXRlU3ViamVjdC5uZXh0KHRoaXMuc2lkZU5hdlN0YXRlKTtcbiAgICBpZiAodGhpcy5zaWRlTmF2U3RhdGUgPT09IGZhbHNlKSB7XG4gICAgICB0aGlzLmluaXRpYXRlQXV0b2ZvY3VzLm5leHQoZmFsc2UpO1xuICAgIH1cbiAgfVxuXG4gIHRvZ2dsZVJlY2lwaWVudFNpZGVOYXYoKSB7XG4gICAgdGhpcy5yZWNpcGllbnRTaWRlTmF2U3RhdGUgPSAhdGhpcy5yZWNpcGllbnRTaWRlTmF2U3RhdGU7XG4gICAgdGhpcy5yZWNpcGllbnRTaWRlTmF2U3RhdGVTdWJqZWN0Lm5leHQodGhpcy5yZWNpcGllbnRTaWRlTmF2U3RhdGUpO1xuICAgIGlmICh0aGlzLnJlY2lwaWVudFNpZGVOYXZTdGF0ZSA9PT0gZmFsc2UpIHtcbiAgICAgIHRoaXMucmVjaXBpZW50QXV0b0ZvY3VzLm5leHQoZmFsc2UpO1xuICAgIH1cbiAgfVxuXG4gIG9wZW5TaWRlTmF2KCkge1xuICAgIHRoaXMuc2lkZU5hdlN0YXRlID0gdHJ1ZTtcbiAgICB0aGlzLnNpZGVOYXZTdGF0ZVN1YmplY3QubmV4dCh0aGlzLnNpZGVOYXZTdGF0ZSk7XG4gIH1cblxuICBvcGVuUmVjaXBpZW50U2lkZU5hdigpIHtcbiAgICB0aGlzLnJlY2lwaWVudFNpZGVOYXZTdGF0ZSA9IHRydWU7XG4gICAgdGhpcy5yZWNpcGllbnRTaWRlTmF2U3RhdGVTdWJqZWN0Lm5leHQodGhpcy5yZWNpcGllbnRTaWRlTmF2U3RhdGUpO1xuICB9XG5cbiAgY2xvc2VTaWRlTmF2KCkge1xuICAgIHRoaXMuc2lkZU5hdlN0YXRlID0gZmFsc2U7XG4gICAgdGhpcy5zaWRlTmF2U3RhdGVTdWJqZWN0Lm5leHQodGhpcy5zaWRlTmF2U3RhdGUpO1xuICAgIHRoaXMuaW5pdGlhdGVBdXRvZm9jdXMubmV4dChmYWxzZSk7XG4gIH1cblxuICBjbG9zZVJlY2lwaWVudFNpZGVOYXYoKSB7XG4gICAgdGhpcy5yZWNpcGllbnRTaWRlTmF2U3RhdGUgPSBmYWxzZTtcbiAgICB0aGlzLnJlY2lwaWVudFNpZGVOYXZTdGF0ZVN1YmplY3QubmV4dCh0aGlzLnJlY2lwaWVudFNpZGVOYXZTdGF0ZSk7XG4gICAgdGhpcy5yZWNpcGllbnRBdXRvRm9jdXMubmV4dChmYWxzZSk7XG4gIH1cblxuICBzZXRBY3RpdmVSb2xlKHJvbGUpIHtcbiAgICB0aGlzLmFjdGl2ZVJvbGUgPSByb2xlO1xuICAgIHRoaXMuaGFzQWN0aXZlUm9sZVN1YmplY3QubmV4dCh0cnVlKTtcbiAgfVxuXG4gIGRlbGV0ZVJvbGUoKSB7XG4gICAgaWYgKCEhdGhpcy5hY3RpdmVSb2xlKSB7XG4gICAgICB0aGlzLmRlbGV0ZVJvbGVTdWJqZWN0Lm5leHQodGhpcy5hY3RpdmVSb2xlKTtcbiAgICAgIHRoaXMuYWN0aXZlUm9sZSA9IG51bGw7XG4gICAgICB0aGlzLmhhc0FjdGl2ZVJvbGVTdWJqZWN0Lm5leHQoZmFsc2UpO1xuICAgIH1cbiAgfVxuXG4gIGdldFNpZGVOYXZTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zaWRlTmF2U3RhdGU7XG4gIH1cblxuICBnZXRSZWNpcGllbnRTaWRlTmF2U3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVjaXBpZW50U2lkZU5hdlN0YXRlO1xuICB9XG59XG4iXX0=